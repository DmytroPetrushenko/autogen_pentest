<?xml version="1.0"?>
<!DOCTYPE issues [
<!ELEMENT issues (issue*)>
<!ATTLIST issues burpVersion CDATA "">
<!ATTLIST issues exportTime CDATA "">
<!ELEMENT issue (serialNumber, type, name, host, path, location, severity, confidence, issueBackground?, remediationBackground?, references?, vulnerabilityClassifications?, issueDetail?, issueDetailItems?, remediationDetail?, requestresponse*, collaboratorEvent*, infiltratorEvent*, staticAnalysis*, dynamicAnalysis*, prototypePollution*)>
<!ELEMENT serialNumber (#PCDATA)>
<!ELEMENT type (#PCDATA)>
<!ELEMENT name (#PCDATA)>
<!ELEMENT host (#PCDATA)>
<!ATTLIST host ip CDATA "">
<!ELEMENT path (#PCDATA)>
<!ELEMENT location (#PCDATA)>
<!ELEMENT severity (#PCDATA)>
<!ELEMENT confidence (#PCDATA)>
<!ELEMENT issueBackground (#PCDATA)>
<!ELEMENT remediationBackground (#PCDATA)>
<!ELEMENT references (#PCDATA)>
<!ELEMENT vulnerabilityClassifications (#PCDATA)>
<!ELEMENT issueDetail (#PCDATA)>
<!ELEMENT issueDetailItems (issueDetailItem*)>
<!ELEMENT issueDetailItem (#PCDATA)>
<!ELEMENT remediationDetail (#PCDATA)>
<!ELEMENT requestresponse (request?, response?, responseRedirected?)>
<!ELEMENT request (#PCDATA)>
<!ATTLIST request method CDATA "">
<!ATTLIST request base64 (true|false) "false">
<!ELEMENT response (#PCDATA)>
<!ATTLIST response base64 (true|false) "false">
<!ELEMENT responseRedirected (#PCDATA)>
<!ELEMENT sender (#PCDATA)>
<!ELEMENT message (#PCDATA)>
<!ELEMENT conversation (#PCDATA)>
<!ELEMENT recipient (#PCDATA)>
<!ELEMENT recipients (recipient*)>
<!ELEMENT smtp (sender, recipients, message, conversation)>
<!ELEMENT collaboratorEvent (interactionType, originIp, time, lookupType?, lookupHost?, requestresponse?, smtp?)>
<!ELEMENT interactionType (#PCDATA)>
<!ELEMENT originIp (#PCDATA)>
<!ELEMENT time (#PCDATA)>
<!ELEMENT lookupType (#PCDATA)>
<!ELEMENT lookupHost (#PCDATA)>
<!ELEMENT infiltratorEvent (parameterName, platform, signature, stackTrace?, parameterValue?, collaboratorEvent)>
<!ELEMENT parameterName (#PCDATA)>
<!ELEMENT platform (#PCDATA)>
<!ELEMENT signature (#PCDATA)>
<!ELEMENT stackTrace (#PCDATA)>
<!ELEMENT parameterValue (#PCDATA)>
<!ELEMENT dynamicAnalysis (source, sink, sourceStackTrace, sinkStackTrace, eventListenerStackTrace, sourceValue, sinkValue, eventHandlerData, eventHandlerDataType, eventHandlerManipulatedData, poc, origin, isOriginChecked, sourceElementId, sourceElementName, eventFiredEventName, eventFiredElementId, eventFiredElementName, eventFiredOuterHtml)>
<!ELEMENT prototypePollution (poc, pollutionTechnique, pollutionType)>
<!ELEMENT staticAnalysis (source, sink, codeSnippets)>
<!ELEMENT source (#PCDATA)>
<!ELEMENT sink (#PCDATA)>
<!ELEMENT sourceStackTrace (#PCDATA)>
<!ELEMENT sinkStackTrace (#PCDATA)>
<!ELEMENT eventListenerStackTrace (#PCDATA)>
<!ELEMENT sourceValue (#PCDATA)>
<!ELEMENT sinkValue (#PCDATA)>
<!ELEMENT eventHandlerData (#PCDATA)>
<!ELEMENT eventHandlerDataType (#PCDATA)>
<!ELEMENT sourceElementId (#PCDATA)>
<!ELEMENT sourceElementName (#PCDATA)>
<!ELEMENT eventFiredEventName (#PCDATA)>
<!ELEMENT eventFiredElementId (#PCDATA)>
<!ELEMENT eventFiredElementName (#PCDATA)>
<!ELEMENT eventFiredOuterHtml (#PCDATA)>
<!ELEMENT eventHandlerManipulatedData (#PCDATA)>
<!ELEMENT poc (#PCDATA)>
<!ELEMENT origin (#PCDATA)>
<!ELEMENT isOriginChecked (#PCDATA)>
<!ELEMENT codeSnippets (codeSnippet*)>
<!ELEMENT codeSnippet (#PCDATA)>
<!ELEMENT pollutionTechnique (#PCDATA)>
<!ELEMENT pollutionType (#PCDATA)>
]>
<issues burpVersion="2024.2.1.4" exportTime="Mon Apr 15 15:39:39 EEST 2024">
  <issue>
    <serialNumber>2854831703513186304</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/user/passcode/check]]></path>
    <location><![CDATA[/employer/v1/user/passcode/check]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://mdtutgnjvrgc.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS91c2VyL3Bhc3Njb2RlL2NoZWNrIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9tZHR1dGduanZyZ2MuY29tDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogMmJhZTdkNjMtZmVmYi00ZDg0LWFjMjYtZmQ0OTQwY2Y3OWQ0DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vbWR0dXRnbmp2cmdjLmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6NDQ6NDcgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiA3Ng0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX09CSkVDVF9OT1RfRk9VTkQiLCJtZXNzYWdlIjoiT2JqZWN0IG5vdCBmb3VuZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7995891929298122752</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/user/register]]></path>
    <location><![CDATA[/employer/v1/user/register]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://yietrvgurpsz.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS91c2VyL3JlZ2lzdGVyIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly95aWV0cnZndXJwc3ouY29tDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogMDNjYjNmNmUtZTg0ZC00Y2I0LWFlYzMtZjUwMjgxZGM2Y2ZlDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8veWlldHJ2Z3VycHN6LmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6NDQ6MjQgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiA3Ng0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX09CSkVDVF9OT1RfRk9VTkQiLCJtZXNzYWdlIjoiT2JqZWN0IG5vdCBmb3VuZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>19327314588897280</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/user/passcode]]></path>
    <location><![CDATA[/employer/v1/user/passcode]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://ojnpfslchzir.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS91c2VyL3Bhc3Njb2RlIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9vam5wZnNsY2h6aXIuY29tDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogZWM5MzliOWItNThiZi00ZTllLThhOGEtNjdmYWMyNmQ5MzgyDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vb2pucGZzbGNoemlyLmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6NDM6MzUgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiA3Ng0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX09CSkVDVF9OT1RfRk9VTkQiLCJtZXNzYWdlIjoiT2JqZWN0IG5vdCBmb3VuZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4399222306525018112</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1]]></path>
    <location><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://mzulinzfqdwq.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktdWwtaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wNTI4ZTYzNy0xOTAzLTQyYzEtOGZjNS1mYjEzZGE0MzNlNzcvMSBIVFRQLzINCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpPcmlnaW46IGh0dHBzOi8vbXp1bGluemZxZHdxLmNvbQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogNGRhMDg2ZDAtYzUyOS00NDMxLTgwZTItNzZiYTM3NTJjMTQyDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vbXp1bGluemZxZHdxLmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6Mzg6MTcgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMTINClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9BVVRIT1JJWkFUSU9OIiwibWVzc2FnZSI6IlRoZSBhY2Nlc3MgdG9rZW4gaXMgbm90IHByb3ZpZGVkLCBhdXRoZW50aWNhdGlvbiBmYWlsZWQuIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4485016208735578112</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1]]></path>
    <location><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://fardktpsaxjc.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktY2ktaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wOTcyNDhjYy0xZmE0LTM4MjUtOTk0MC1kYmQxN2ViYTJjZWEvMSBIVFRQLzINCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpPcmlnaW46IGh0dHBzOi8vZmFyZGt0cHNheGpjLmNvbQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogNjA1MjYwMzMtZjFlYi00N2NmLWI5MzktMGQ2YWNkNmVkZWU2DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZmFyZGt0cHNheGpjLmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MzY6MzggR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMTINClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9BVVRIT1JJWkFUSU9OIiwibWVzc2FnZSI6IlRoZSBhY2Nlc3MgdG9rZW4gaXMgbm90IHByb3ZpZGVkLCBhdXRoZW50aWNhdGlvbiBmYWlsZWQuIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6940506702035772416</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1]]></path>
    <location><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://xqbcsaeggnti.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktYWNjLWluZGl2aWR1YWwvY2VydGlmaWNhdGUtcG9saWN5LWRldGFpbHMvYTAwYjJiMWQtZWJiOS0zM2IyLTg1NzctZjBlNjExMDZlNjdjLzEgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KT3JpZ2luOiBodHRwczovL3hxYmNzYWVnZ250aS5jb20NCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogNGE4OGRmZTAtZmQ5My00ZTM3LThjMWEtMjYwZjVkOTBmMjM2DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8veHFiY3NhZWdnbnRpLmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MzQ6NDEgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMTINClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9BVVRIT1JJWkFUSU9OIiwibWVzc2FnZSI6IlRoZSBhY2Nlc3MgdG9rZW4gaXMgbm90IHByb3ZpZGVkLCBhdXRoZW50aWNhdGlvbiBmYWlsZWQuIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3913870453834758144</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/update-members-relationship]]></path>
    <location><![CDATA[/employer/v1/member/update-members-relationship]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://qnqtjwjmywqj.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9tZW1iZXIvdXBkYXRlLW1lbWJlcnMtcmVsYXRpb25zaGlwIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9xbnF0andqbXl3cWouY29tDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogYzc0ODNmNjQtNGI3NC00YjBkLThkMDQtMTExMjkxNDQ1YjBjDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vcW5xdGp3am15d3FqLmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTk6MzkgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiA3Ng0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX09CSkVDVF9OT1RfRk9VTkQiLCJtZXNzYWdlIjoiT2JqZWN0IG5vdCBmb3VuZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8608117676698470400</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/related-members/]]></path>
    <location><![CDATA[/employer/v1/member/related-members/]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://otkuqydzvmnh.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9tZW1iZXIvcmVsYXRlZC1tZW1iZXJzLyBIVFRQLzINCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpPcmlnaW46IGh0dHBzOi8vb3RrdXF5ZHp2bW5oLmNvbQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogMTc1NjhlZDYtMGQ1Zi00NzIwLTk1MzktNGZiYzExMjc4OTM4DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vb3RrdXF5ZHp2bW5oLmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDk6MzQgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiA3Ng0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX09CSkVDVF9OT1RfRk9VTkQiLCJtZXNzYWdlIjoiT2JqZWN0IG5vdCBmb3VuZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2760958213174916096</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/add-members-relationship]]></path>
    <location><![CDATA[/employer/v1/member/add-members-relationship]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://emttrsbdhzpv.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9tZW1iZXIvYWRkLW1lbWJlcnMtcmVsYXRpb25zaGlwIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9lbXR0cnNiZGh6cHYuY29tDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogMjVhNWQ0MmMtYTIzNi00NWRiLWE0M2UtODc3N2MwNmY4M2NhDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZW10dHJzYmRoenB2LmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDg6NTMgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiA3Ng0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX09CSkVDVF9OT1RfRk9VTkQiLCJtZXNzYWdlIjoiT2JqZWN0IG5vdCBmb3VuZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5347395155579559936</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/phonetype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/phonetype/load]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://djcmdeabgmnj.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL3Bob25ldHlwZS9sb2FkIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9kamNtZGVhYmdtbmouY29tDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogMzhlZmUxZmItZGVmYS00OTE2LTg5OGMtMDBjNTI0NDczMTJiDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZGpjbWRlYWJnbW5qLmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDc6NTggR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiA3Ng0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX09CSkVDVF9OT1RfRk9VTkQiLCJtZXNzYWdlIjoiT2JqZWN0IG5vdCBmb3VuZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5785862617590732800</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/stateprov/load]]></path>
    <location><![CDATA[/employer/v1/lookups/stateprov/load]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://mdgmistmjvoz.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL3N0YXRlcHJvdi9sb2FkIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9tZGdtaXN0bWp2b3ouY29tDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogYzRkNjU3N2ItYTkxZC00NGI1LTgxMzktMjE2YTQ3YzM0ODIzDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vbWRnbWlzdG1qdm96LmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDc6NDUgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiA3Ng0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX09CSkVDVF9OT1RfRk9VTkQiLCJtZXNzYWdlIjoiT2JqZWN0IG5vdCBmb3VuZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3770392238899682304</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/emailtype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/emailtype/load]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://ittztllouasv.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL2VtYWlsdHlwZS9sb2FkIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9pdHR6dGxsb3Vhc3YuY29tDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogMTc3NTRkMzAtMTNlYy00ZTg5LWE0ZjQtYmRlMmZmM2Q4YzliDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vaXR0enRsbG91YXN2LmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDY6NDEgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiA3Ng0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX09CSkVDVF9OT1RfRk9VTkQiLCJtZXNzYWdlIjoiT2JqZWN0IG5vdCBmb3VuZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5716204967260988416</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/addresstype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/addresstype/load]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://zhzccgdonrrl.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL2FkZHJlc3N0eXBlL2xvYWQgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KT3JpZ2luOiBodHRwczovL3poemNjZ2RvbnJybC5jb20NCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogYTJlMmIyMWItODc1My00ZTQ2LWE4MzctNTk4YmQ2NDE2ZjkwDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vemh6Y2NnZG9ucnJsLmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDY6MjUgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiA3Ng0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX09CSkVDVF9OT1RfRk9VTkQiLCJtZXNzYWdlIjoiT2JqZWN0IG5vdCBmb3VuZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8982033093568033792</serialNumber>
    <type>2098689</type>
    <name><![CDATA[Cross-origin resource sharing: arbitrary origin trusted]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/documents]]></path>
    <location><![CDATA[/employer/v1/documents]]></location>
    <severity>High</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>
Trusting arbitrary origins effectively disables the same-origin policy, allowing two-way interaction by third-party web sites. Unless the response consists only of unprotected public content, this policy is likely to present a security risk.</p>
<p>If the site  specifies the header Access-Control-Allow-Credentials: true, third-party sites may be able to carry out privileged actions and retrieve sensitive information. Even if it does not, attackers may be able to  bypass any IP-based access controls by proxying through users'  browsers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Rather than using a wildcard or programmatically verifying supplied origins, use a whitelist of trusted domains.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request that allows access from any domain.<br><br>The application allowed access from the requested origin <strong>https://avlewfblnlpl.com</strong>]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9kb2N1bWVudHMgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KT3JpZ2luOiBodHRwczovL2F2bGV3ZmJsbmxwbC5jb20NCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogNGU4YmU5NDMtZjkzMy00NDU5LWIyN2ItYThmNmZiNWQ1OWIwDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vYXZsZXdmYmxubHBsLmNvbQ0KQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnM6IENvbnRlbnQtTGFuZ3VhZ2UsQ29udGVudC1SYW5nZSxBY2NlcHQtUmFuZ2VzLFgtUGFnaW5nLUxpbWl0LFgtUGFnaW5nLU9mZnNldCxYLVRvdGFsLUNvdW50LFdXVy1BdXRoZW50aWNhdGUsQ29udGVudC1EaXNwb3NpdGlvbg0KQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHM6IHRydWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDI6NTggR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMTINClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAyDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9BVVRIT1JJWkFUSU9OIiwibWVzc2FnZSI6IlRoZSBhY2Nlc3MgdG9rZW4gaXMgbm90IHByb3ZpZGVkLCBhdXRoZW50aWNhdGlvbiBmYWlsZWQuIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4357487648671939584</serialNumber>
    <type>16777472</type>
    <name><![CDATA[TLS certificate]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Medium</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>TLS (or SSL) helps to protect the confidentiality and integrity of information in transit between the browser and server, and to provide authentication of the server's identity. To serve this purpose, the server must present an TLS certificate that is valid for the server's hostname, is issued by a trusted authority and is valid for the current date. If any one of these requirements is not met, TLS connections to the server will not provide the full protection for which TLS is designed.</p>
<p>It should be noted that various attacks exist against TLS in general, and in the context of HTTPS web connections in particular. It may be possible for a determined and suitably-positioned attacker to compromise TLS connections without user detection even when a valid TLS certificate is used. </p>]]></issueBackground>
    <references><![CDATA[<ul><li><a href="https://wiki.mozilla.org/Security/Server_Side_TLS">SSL/TLS Configuration Guide</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/326.html">CWE-326: Inadequate Encryption Strength</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following problem was identified with the server's TLS certificate:<ul><li>The server's certificate is not trusted.</li></ul><b>Note:</b> Burp relies on the Java trust store to determine whether certificates are trusted. The Java trust store does not include every root CA certificate that is included within browser trust stores. Burp might incorrectly report that a certificate is not trusted, if a valid root CA certificate is being used that is not included in the Java trust store.<br><br>The server presented the following certificates:<br><br><h4>Server certificate</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>k8s.az03.aaeb.cloud, *.k8s.az03.aaeb.cloud</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>R3</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Wed Jul 12 23:32:42 UTC 2023</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Tue Oct 10 23:32:41 UTC 2023</td></tr></table><h4>Certificate chain #1</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>R3</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>ISRG Root X1</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Fri Sep 04 00:00:00 UTC 2020</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Mon Sep 15 16:00:00 UTC 2025</td></tr></table><h4>Certificate chain #2</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>ISRG Root X1</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>DST Root CA X3</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Wed Jan 20 19:14:03 UTC 2021</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Mon Sep 30 18:14:03 UTC 2024</td></tr></table>]]></issueDetail>
  </issue>
  <issue>
    <serialNumber>903397803305521152</serialNumber>
    <type>16777984</type>
    <name><![CDATA[Strict transport security not enforced]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/phonetype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/phonetype/load]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p> The application fails to prevent users from connecting  to it over unencrypted connections.  An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption, and use the application as a platform for attacks against its users. This attack is performed by rewriting HTTPS links as HTTP, so that if a targeted user follows a link to the site from an HTTP page, their browser never attempts to use an encrypted connection. The sslstrip tool  automates this process. </p>
<p>
To exploit this vulnerability, an attacker must be suitably positioned to intercept and modify the victim's network traffic.This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The application should instruct web browsers to only access the application using HTTPS. To do this, enable HTTP Strict Transport Security (HSTS) by adding a response header with the name 'Strict-Transport-Security' and the value 'max-age=expireTime', where expireTime is the time in seconds that browsers should remember that the site should only be accessed using HTTPS. Consider adding the 'includeSubDomains' flag if appropriate.</p>
<p>Note that because HSTS is a &quot;trust on first use&quot; (TOFU) protocol, a user who has never accessed the application will never have seen the HSTS header, and will therefore still be vulnerable to SSL stripping attacks. To mitigate this risk, you can optionally add the 'preload' flag to the HSTS header, and submit the domain for review by browser vendors.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security">HTTP Strict Transport Security</a></li>
<li><a href="https://github.com/moxie0/sslstrip">sslstrip</a></li>
<li><a href="https://hstspreload.appspot.com/">HSTS Preload Form</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/523.html">CWE-523: Unprotected Transport of Credentials</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/94.html">CAPEC-94: Man in the Middle Attack</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/157.html">CAPEC-157: Sniffing Attacks</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL3Bob25ldHlwZS9sb2FkIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogOTUyZmU1MzQtYjYyYi00ZDllLWE1NDQtYTFmNzhjZTZiOWFlDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIwOjU2IEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb250ZW50LUxlbmd0aDogNzYNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAyDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9PQkpFQ1RfTk9UX0ZPVU5EIiwibWVzc2FnZSI6Ik9iamVjdCBub3QgZm91bmQuIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5535347863389522944</serialNumber>
    <type>16777984</type>
    <name><![CDATA[Strict transport security not enforced]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/emailtype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/emailtype/load]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p> The application fails to prevent users from connecting  to it over unencrypted connections.  An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption, and use the application as a platform for attacks against its users. This attack is performed by rewriting HTTPS links as HTTP, so that if a targeted user follows a link to the site from an HTTP page, their browser never attempts to use an encrypted connection. The sslstrip tool  automates this process. </p>
<p>
To exploit this vulnerability, an attacker must be suitably positioned to intercept and modify the victim's network traffic.This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The application should instruct web browsers to only access the application using HTTPS. To do this, enable HTTP Strict Transport Security (HSTS) by adding a response header with the name 'Strict-Transport-Security' and the value 'max-age=expireTime', where expireTime is the time in seconds that browsers should remember that the site should only be accessed using HTTPS. Consider adding the 'includeSubDomains' flag if appropriate.</p>
<p>Note that because HSTS is a &quot;trust on first use&quot; (TOFU) protocol, a user who has never accessed the application will never have seen the HSTS header, and will therefore still be vulnerable to SSL stripping attacks. To mitigate this risk, you can optionally add the 'preload' flag to the HSTS header, and submit the domain for review by browser vendors.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security">HTTP Strict Transport Security</a></li>
<li><a href="https://github.com/moxie0/sslstrip">sslstrip</a></li>
<li><a href="https://hstspreload.appspot.com/">HSTS Preload Form</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/523.html">CWE-523: Unprotected Transport of Credentials</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/94.html">CAPEC-94: Man in the Middle Attack</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/157.html">CAPEC-157: Sniffing Attacks</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL2VtYWlsdHlwZS9sb2FkIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogMGQyZWE1MGUtMmFjYS00OTUxLWJmYmUtYzUzNWIyYThlMGU2DQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIxOjAyIEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb250ZW50LUxlbmd0aDogNzYNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAyDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9PQkpFQ1RfTk9UX0ZPVU5EIiwibWVzc2FnZSI6Ik9iamVjdCBub3QgZm91bmQuIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>361126256758755328</serialNumber>
    <type>16777984</type>
    <name><![CDATA[Strict transport security not enforced]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/stateprov/load]]></path>
    <location><![CDATA[/employer/v1/lookups/stateprov/load]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p> The application fails to prevent users from connecting  to it over unencrypted connections.  An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption, and use the application as a platform for attacks against its users. This attack is performed by rewriting HTTPS links as HTTP, so that if a targeted user follows a link to the site from an HTTP page, their browser never attempts to use an encrypted connection. The sslstrip tool  automates this process. </p>
<p>
To exploit this vulnerability, an attacker must be suitably positioned to intercept and modify the victim's network traffic.This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The application should instruct web browsers to only access the application using HTTPS. To do this, enable HTTP Strict Transport Security (HSTS) by adding a response header with the name 'Strict-Transport-Security' and the value 'max-age=expireTime', where expireTime is the time in seconds that browsers should remember that the site should only be accessed using HTTPS. Consider adding the 'includeSubDomains' flag if appropriate.</p>
<p>Note that because HSTS is a &quot;trust on first use&quot; (TOFU) protocol, a user who has never accessed the application will never have seen the HSTS header, and will therefore still be vulnerable to SSL stripping attacks. To mitigate this risk, you can optionally add the 'preload' flag to the HSTS header, and submit the domain for review by browser vendors.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security">HTTP Strict Transport Security</a></li>
<li><a href="https://github.com/moxie0/sslstrip">sslstrip</a></li>
<li><a href="https://hstspreload.appspot.com/">HSTS Preload Form</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/523.html">CWE-523: Unprotected Transport of Credentials</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/94.html">CAPEC-94: Man in the Middle Attack</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/157.html">CAPEC-157: Sniffing Attacks</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL3N0YXRlcHJvdi9sb2FkIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogMmQ1ODM5MGUtMTk2NS00MjQ1LWFkNTctMjE0ZGU1YTk5YWQ4DQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIwOjUzIEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb250ZW50LUxlbmd0aDogNzYNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAyDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9PQkpFQ1RfTk9UX0ZPVU5EIiwibWVzc2FnZSI6Ik9iamVjdCBub3QgZm91bmQuIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>280669891951682560</serialNumber>
    <type>16777984</type>
    <name><![CDATA[Strict transport security not enforced]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/addresstype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/addresstype/load]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p> The application fails to prevent users from connecting  to it over unencrypted connections.  An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption, and use the application as a platform for attacks against its users. This attack is performed by rewriting HTTPS links as HTTP, so that if a targeted user follows a link to the site from an HTTP page, their browser never attempts to use an encrypted connection. The sslstrip tool  automates this process. </p>
<p>
To exploit this vulnerability, an attacker must be suitably positioned to intercept and modify the victim's network traffic.This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The application should instruct web browsers to only access the application using HTTPS. To do this, enable HTTP Strict Transport Security (HSTS) by adding a response header with the name 'Strict-Transport-Security' and the value 'max-age=expireTime', where expireTime is the time in seconds that browsers should remember that the site should only be accessed using HTTPS. Consider adding the 'includeSubDomains' flag if appropriate.</p>
<p>Note that because HSTS is a &quot;trust on first use&quot; (TOFU) protocol, a user who has never accessed the application will never have seen the HSTS header, and will therefore still be vulnerable to SSL stripping attacks. To mitigate this risk, you can optionally add the 'preload' flag to the HSTS header, and submit the domain for review by browser vendors.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security">HTTP Strict Transport Security</a></li>
<li><a href="https://github.com/moxie0/sslstrip">sslstrip</a></li>
<li><a href="https://hstspreload.appspot.com/">HSTS Preload Form</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/523.html">CWE-523: Unprotected Transport of Credentials</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/94.html">CAPEC-94: Man in the Middle Attack</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/157.html">CAPEC-157: Sniffing Attacks</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL2FkZHJlc3N0eXBlL2xvYWQgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogYTZlYWI2MmQtZmE0MS00MzgwLWJmNGEtZmVhNGQ2NThkNjY0DQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIwOjU5IEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb250ZW50LUxlbmd0aDogNzYNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAyDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9PQkpFQ1RfTk9UX0ZPVU5EIiwibWVzc2FnZSI6Ik9iamVjdCBub3QgZm91bmQuIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2523656419043458048</serialNumber>
    <type>16777984</type>
    <name><![CDATA[Strict transport security not enforced]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Low</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p> The application fails to prevent users from connecting  to it over unencrypted connections.  An attacker able to modify a legitimate user's network traffic could bypass the application's use of SSL/TLS encryption, and use the application as a platform for attacks against its users. This attack is performed by rewriting HTTPS links as HTTP, so that if a targeted user follows a link to the site from an HTTP page, their browser never attempts to use an encrypted connection. The sslstrip tool  automates this process. </p>
<p>
To exploit this vulnerability, an attacker must be suitably positioned to intercept and modify the victim's network traffic.This scenario typically occurs when a client communicates with the server over an insecure connection such as public Wi-Fi, or a corporate or home network that is shared with a compromised computer. Common defenses such as switched networks are not sufficient to prevent this. An attacker situated in the user's ISP or the application's hosting infrastructure could also perform this attack. Note that an advanced adversary could potentially target any connection made over the Internet's core infrastructure. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The application should instruct web browsers to only access the application using HTTPS. To do this, enable HTTP Strict Transport Security (HSTS) by adding a response header with the name 'Strict-Transport-Security' and the value 'max-age=expireTime', where expireTime is the time in seconds that browsers should remember that the site should only be accessed using HTTPS. Consider adding the 'includeSubDomains' flag if appropriate.</p>
<p>Note that because HSTS is a &quot;trust on first use&quot; (TOFU) protocol, a user who has never accessed the application will never have seen the HSTS header, and will therefore still be vulnerable to SSL stripping attacks. To mitigate this risk, you can optionally add the 'preload' flag to the HSTS header, and submit the domain for review by browser vendors.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security">HTTP Strict Transport Security</a></li>
<li><a href="https://github.com/moxie0/sslstrip">sslstrip</a></li>
<li><a href="https://hstspreload.appspot.com/">HSTS Preload Form</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/523.html">CWE-523: Unprotected Transport of Credentials</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/94.html">CAPEC-94: Man in the Middle Attack</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/157.html">CAPEC-157: Sniffing Attacks</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[This issue was found in multiple locations under the reported path.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC83YWE4N2ZkOTgxN2QwZWQ0OTExZjU4YWZjZWM3NGZhYi53b2ZmIEhUVFAvMg0KSG9zdDogcGVyc29uYS1lbXBsb3llci1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7949150432205595648</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1]]></path>
    <location><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting">Web Security Academy: Cross-site scripting</a></li>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting/reflected">Web Security Academy: Reflected cross-site scripting</a></li>
	<li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/591.html">CAPEC-591: Reflected XSS</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>psroi&lt;img src=a onerror=alert(1)&gt;uj6ii</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response. The proof-of-concept attack demonstrated uses an event handler to introduce arbitrary JavaScript into the document.<br><br>Note that a redirection occurred between the attack request and the response containing the echoed input. It is necessary to follow this redirection for the attack to succeed. When the attack is carried out via a browser, the redirection will be followed automatically.<br><br>The response does not state that the content type is HTML. The issue is only directly exploitable if a browser can be made to interpret the response as HTML. No modern browser will interpret the response as HTML. However, the issue might be indirectly exploitable if a client-side script processes the response and embeds it into an HTML context.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktY2ktaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wOTcyNDhjYy0xZmE0LTM4MjUtOTk0MC1kYmQxN2ViYTJjZWEvMXBzcm9pJTNjaW1nJTIwc3JjJTNkYSUyMG9uZXJyb3IlM2RhbGVydCgxKSUzZXVqNmlpIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiAzYTMyNTVlYS1jMjA5LTRiYjMtYTM2Mi0wMjY0MDA1YTliODINCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6NTA6MDUgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxNTcNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjFwc3JvaTxpbWcgc3JjPWEgb25lcnJvcj1hbGVydCgxKT51ajZpaVwiIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2571038222761995264</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1]]></path>
    <location><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting">Web Security Academy: Cross-site scripting</a></li>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting/reflected">Web Security Academy: Reflected cross-site scripting</a></li>
	<li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/591.html">CAPEC-591: Reflected XSS</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>impcd&lt;img src=a onerror=alert(1)&gt;i4njj</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response. The proof-of-concept attack demonstrated uses an event handler to introduce arbitrary JavaScript into the document.<br><br>Note that a redirection occurred between the attack request and the response containing the echoed input. It is necessary to follow this redirection for the attack to succeed. When the attack is carried out via a browser, the redirection will be followed automatically.<br><br>The response does not state that the content type is HTML. The issue is only directly exploitable if a browser can be made to interpret the response as HTML. No modern browser will interpret the response as HTML. However, the issue might be indirectly exploitable if a client-side script processes the response and embeds it into an HTML context.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktdWwtaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wNTI4ZTYzNy0xOTAzLTQyYzEtOGZjNS1mYjEzZGE0MzNlNzcvMWltcGNkJTNjaW1nJTIwc3JjJTNkYSUyMG9uZXJyb3IlM2RhbGVydCgxKSUzZWk0bmpqIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiBiZDU4OTViNS05MWVkLTQ1MmYtOGY2NC00ZjAyNzU0ZTkwMDkNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6NDk6MjAgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxNTcNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjFpbXBjZDxpbWcgc3JjPWEgb25lcnJvcj1hbGVydCgxKT5pNG5qalwiIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6486639419491234816</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1]]></path>
    <location><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktY2ktaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wOTcyNDhjYy0xZmE0LTM4MjUtOTk0MC1kYmQxN2ViYTJjZWEvMTRlYWl0MnFqOWogSFRUUC8xLjENCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiA4MGRkMDQ2Yi1hNzY1LTQzYjgtYTc3Mi01YjMzZTI0NWUxMmMNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6NDk6NDUgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjkNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjE0ZWFpdDJxajlqXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9049683384543562752</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1]]></path>
    <location><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktdWwtaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wNTI4ZTYzNy0xOTAzLTQyYzEtOGZjNS1mYjEzZGE0MzNlNzcvMWtheW5panJnb2UgSFRUUC8xLjENCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiBiNTJiNDg3OC04NzA0LTQxNWItOTY1Ni0zMmEyZTEyMGZjOTENCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6NDk6MDEgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjkNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjFrYXluaWpyZ29lXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3930286785176584192</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1]]></path>
    <location><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting">Web Security Academy: Cross-site scripting</a></li>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting/reflected">Web Security Academy: Reflected cross-site scripting</a></li>
	<li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/591.html">CAPEC-591: Reflected XSS</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>iq85n&lt;img src=a onerror=alert(1)&gt;iwazc</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response. The proof-of-concept attack demonstrated uses an event handler to introduce arbitrary JavaScript into the document.<br><br>Note that a redirection occurred between the attack request and the response containing the echoed input. It is necessary to follow this redirection for the attack to succeed. When the attack is carried out via a browser, the redirection will be followed automatically.<br><br>The response does not state that the content type is HTML. The issue is only directly exploitable if a browser can be made to interpret the response as HTML. No modern browser will interpret the response as HTML. However, the issue might be indirectly exploitable if a client-side script processes the response and embeds it into an HTML context.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktYWNjLWluZGl2aWR1YWwvY2VydGlmaWNhdGUtcG9saWN5LWRldGFpbHMvYTAwYjJiMWQtZWJiOS0zM2IyLTg1NzctZjBlNjExMDZlNjdjLzFpcTg1biUzY2ltZyUyMHNyYyUzZGElMjBvbmVycm9yJTNkYWxlcnQoMSklM2Vpd2F6YyBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiBiNDhhNGRmMC0xMWMwLTRiZTQtYTdlYy1hMzI3YzAxMjI1M2INCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6NDc6NTAgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxNTcNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAyDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjFpcTg1bjxpbWcgc3JjPWEgb25lcnJvcj1hbGVydCgxKT5pd2F6Y1wiIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7809208945654324224</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1]]></path>
    <location><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktYWNjLWluZGl2aWR1YWwvY2VydGlmaWNhdGUtcG9saWN5LWRldGFpbHMvYTAwYjJiMWQtZWJiOS0zM2IyLTg1NzctZjBlNjExMDZlNjdjLzFrdmVsb2h4emo0IEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiAyNGViYTNjZC0yY2M3LTQ1MmYtYWJlNy0zZmZiYjExY2JkMDANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6NDc6MzEgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjkNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjFrdmVsb2h4emo0XCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3822460571431755776</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/user/passcode/check]]></path>
    <location><![CDATA[/employer/v1/user/passcode/check]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS91c2VyL3Bhc3Njb2RlL2NoZWNrIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogNGI4MjE4ZWMtMmZhMy00Y2RlLTg0YTgtZWM5YTViNjUzMTY2DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTo0NDo0NyBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDc2DQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfT0JKRUNUX05PVF9GT1VORCIsIm1lc3NhZ2UiOiJPYmplY3Qgbm90IGZvdW5kLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6526757522605377536</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/user/register]]></path>
    <location><![CDATA[/employer/v1/user/register]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS91c2VyL3JlZ2lzdGVyIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogNjZiMTVmMGQtMjk4ZC00ZjVmLTg0OGEtNWVhODRjMGVjYzg1DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTo0NDoyMyBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDc2DQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfT0JKRUNUX05PVF9GT1VORCIsIm1lc3NhZ2UiOiJPYmplY3Qgbm90IGZvdW5kLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>36980077757558784</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/user/passcode]]></path>
    <location><![CDATA[/employer/v1/user/passcode]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS91c2VyL3Bhc3Njb2RlIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogODFkODFlZmUtODU2Zi00OWQxLThiMWQtNjk0ZWE4ZmIzMTFkDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTo0MzozMyBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDc2DQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfT0JKRUNUX05PVF9GT1VORCIsIm1lc3NhZ2UiOiJPYmplY3Qgbm90IGZvdW5kLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6337537687316156416</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1]]></path>
    <location><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/11]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
    <li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktdWwtaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wNTI4ZTYzNy0xOTAzLTQyYzEtOGZjNS1mYjEzZGE0MzNlNzcvMTEgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29va2llOiBERVZJQ0VfVFlQRT1wcml2YXRlOyBnZW5lc2lzLXNzby1zZXNzaW9uLWF1dGhlbnRpY2F0aW9uLXJlZnJlc2gtdG9rZW49ZXlKcmFXUWlPaUpqY0dsdFkyOXlaVjh3T1RJMU1qQXhOU0lzSW5abGNpSTZJakV1TUNJc0lucHBjQ0k2SWtSbFpteGhkR1VpTENKelpYSWlPaUl4TGpBaWZRLi5fUE40a0NzS0JDNE1wVHBPLkFqdFNsN2t0RC1OV0lGaDBlcmlHeW5GNjJ3VlNqLUR5R2ZaVzgtcnJrWExXU3JTM3dZZ2RyeDVxUHh3NkFteHgta2tPcWZRNlJoRndUSFdFNkNKWFJMMzhBaEhCajVncFFOcTZYMEhuUGZNVFNoZ2JmT2ZQUWV3Zlh0Ym4xZF9pVzc2LVhuNkExNlkyMkR6dndsUDlPOGpTaldUWENjdmh1QXV4NXVRaXdMclg4TURXei1wUGJpNGttYjg5SjBkLWpNaHE2WFRITTNfOUVobzhoZzlKbm1rZmltd1JkY0h0MGJyZXJhUG1BTF9ubi0wRmx2SThDQXp1YmozaTJlekFzZFV3UEhrZjY3eTMxQ0xtZUFwSHduTE9waTAzeGF4WGNYVFl5MGVKdG1xU1FPcmN5Y2VTNnBIMEVNRWJWNmxxeWd3WVVsdTFHd0x5OXB2WndzNHd4WVl0T2I5TUhid0cxZmVkRGtTc05wUmlmakJzaGRtOHRsQlpzUy1TWE93UEE2ZzEwMHh2b1JaOU1Ja3F6SnpEZVB2NmFpYjhZNDQ2WVhsdEJXS1VmTWZpVldTbkNmYTdFd1Vad3JjQnBZN01HY2p6aWdjeFZyWVNCSk5uZ1hkS3VvNVFna05jUDBhc0xTNm1BOVRFaGQ0cmF2X3M4dmZpNVFzbHVTRVdIa3hIQmE5UklzSHNFS0l1Q3lnTEJnS1ZxV1Vxb3J4Z29BaGRCSlpONGRDekhYdl9kd1NBNG9VQzZBWmcxQkY1SnJTVmlrcUxDRXhxajNqNmF2N2dOR3JYZzZKd1EwdWlYTUdXbi1odHdKdmVPNEZxMW83YVRYTWxJOF9YSTY3Y2g5Y0VtRzlDdGU3SWVFTnZXb1EzcUd4ZE1qTGhLTlJXM2JEZnlOWFZDdDFBRlhjTmdRU2FrNjBSemJGZ1V6UFRvd1pYMWFsMDE4ME5DRW1xblRDVThuTS5Zam5MMVRxdlc1Vll3NExQX1NHMG5BDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClgtUmVxdWVzdC1JZDogZGY2ODk1MzYtYmY0OS00YTcyLTllNDQtMTM1MmRlNzVlNDMwDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjM4OjQxIEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb250ZW50LUxlbmd0aDogMTEyDQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfQVVUSE9SSVpBVElPTiIsIm1lc3NhZ2UiOiJUaGUgYWNjZXNzIHRva2VuIGlzIG5vdCBwcm92aWRlZCwgYXV0aGVudGljYXRpb24gZmFpbGVkLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktdWwtaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wNTI4ZTYzNy0xOTAzLTQyYzEtOGZjNS1mYjEzZGE0MzNlNzcveTEgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29va2llOiBERVZJQ0VfVFlQRT1wcml2YXRlOyBnZW5lc2lzLXNzby1zZXNzaW9uLWF1dGhlbnRpY2F0aW9uLXJlZnJlc2gtdG9rZW49ZXlKcmFXUWlPaUpqY0dsdFkyOXlaVjh3T1RJMU1qQXhOU0lzSW5abGNpSTZJakV1TUNJc0lucHBjQ0k2SWtSbFpteGhkR1VpTENKelpYSWlPaUl4TGpBaWZRLi5fUE40a0NzS0JDNE1wVHBPLkFqdFNsN2t0RC1OV0lGaDBlcmlHeW5GNjJ3VlNqLUR5R2ZaVzgtcnJrWExXU3JTM3dZZ2RyeDVxUHh3NkFteHgta2tPcWZRNlJoRndUSFdFNkNKWFJMMzhBaEhCajVncFFOcTZYMEhuUGZNVFNoZ2JmT2ZQUWV3Zlh0Ym4xZF9pVzc2LVhuNkExNlkyMkR6dndsUDlPOGpTaldUWENjdmh1QXV4NXVRaXdMclg4TURXei1wUGJpNGttYjg5SjBkLWpNaHE2WFRITTNfOUVobzhoZzlKbm1rZmltd1JkY0h0MGJyZXJhUG1BTF9ubi0wRmx2SThDQXp1YmozaTJlekFzZFV3UEhrZjY3eTMxQ0xtZUFwSHduTE9waTAzeGF4WGNYVFl5MGVKdG1xU1FPcmN5Y2VTNnBIMEVNRWJWNmxxeWd3WVVsdTFHd0x5OXB2WndzNHd4WVl0T2I5TUhid0cxZmVkRGtTc05wUmlmakJzaGRtOHRsQlpzUy1TWE93UEE2ZzEwMHh2b1JaOU1Ja3F6SnpEZVB2NmFpYjhZNDQ2WVhsdEJXS1VmTWZpVldTbkNmYTdFd1Vad3JjQnBZN01HY2p6aWdjeFZyWVNCSk5uZ1hkS3VvNVFna05jUDBhc0xTNm1BOVRFaGQ0cmF2X3M4dmZpNVFzbHVTRVdIa3hIQmE5UklzSHNFS0l1Q3lnTEJnS1ZxV1Vxb3J4Z29BaGRCSlpONGRDekhYdl9kd1NBNG9VQzZBWmcxQkY1SnJTVmlrcUxDRXhxajNqNmF2N2dOR3JYZzZKd1EwdWlYTUdXbi1odHdKdmVPNEZxMW83YVRYTWxJOF9YSTY3Y2g5Y0VtRzlDdGU3SWVFTnZXb1EzcUd4ZE1qTGhLTlJXM2JEZnlOWFZDdDFBRlhjTmdRU2FrNjBSemJGZ1V6UFRvd1pYMWFsMDE4ME5DRW1xblRDVThuTS5Zam5MMVRxdlc1Vll3NExQX1NHMG5BDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiBiMTA0YjQ4ZS1kMjBhLTRlMzAtYjQzNi1lODM0YWM1YjE1MjcNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6Mzg6NDIgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjANClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcInkxXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6029861766393419776</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1]]></path>
    <location><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/12]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
    <li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktdWwtaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wNTI4ZTYzNy0xOTAzLTQyYzEtOGZjNS1mYjEzZGE0MzNlNzcvMTIgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29va2llOiBERVZJQ0VfVFlQRT1wcml2YXRlOyBnZW5lc2lzLXNzby1zZXNzaW9uLWF1dGhlbnRpY2F0aW9uLXJlZnJlc2gtdG9rZW49ZXlKcmFXUWlPaUpqY0dsdFkyOXlaVjh3T1RJMU1qQXhOU0lzSW5abGNpSTZJakV1TUNJc0lucHBjQ0k2SWtSbFpteGhkR1VpTENKelpYSWlPaUl4TGpBaWZRLi5fUE40a0NzS0JDNE1wVHBPLkFqdFNsN2t0RC1OV0lGaDBlcmlHeW5GNjJ3VlNqLUR5R2ZaVzgtcnJrWExXU3JTM3dZZ2RyeDVxUHh3NkFteHgta2tPcWZRNlJoRndUSFdFNkNKWFJMMzhBaEhCajVncFFOcTZYMEhuUGZNVFNoZ2JmT2ZQUWV3Zlh0Ym4xZF9pVzc2LVhuNkExNlkyMkR6dndsUDlPOGpTaldUWENjdmh1QXV4NXVRaXdMclg4TURXei1wUGJpNGttYjg5SjBkLWpNaHE2WFRITTNfOUVobzhoZzlKbm1rZmltd1JkY0h0MGJyZXJhUG1BTF9ubi0wRmx2SThDQXp1YmozaTJlekFzZFV3UEhrZjY3eTMxQ0xtZUFwSHduTE9waTAzeGF4WGNYVFl5MGVKdG1xU1FPcmN5Y2VTNnBIMEVNRWJWNmxxeWd3WVVsdTFHd0x5OXB2WndzNHd4WVl0T2I5TUhid0cxZmVkRGtTc05wUmlmakJzaGRtOHRsQlpzUy1TWE93UEE2ZzEwMHh2b1JaOU1Ja3F6SnpEZVB2NmFpYjhZNDQ2WVhsdEJXS1VmTWZpVldTbkNmYTdFd1Vad3JjQnBZN01HY2p6aWdjeFZyWVNCSk5uZ1hkS3VvNVFna05jUDBhc0xTNm1BOVRFaGQ0cmF2X3M4dmZpNVFzbHVTRVdIa3hIQmE5UklzSHNFS0l1Q3lnTEJnS1ZxV1Vxb3J4Z29BaGRCSlpONGRDekhYdl9kd1NBNG9VQzZBWmcxQkY1SnJTVmlrcUxDRXhxajNqNmF2N2dOR3JYZzZKd1EwdWlYTUdXbi1odHdKdmVPNEZxMW83YVRYTWxJOF9YSTY3Y2g5Y0VtRzlDdGU3SWVFTnZXb1EzcUd4ZE1qTGhLTlJXM2JEZnlOWFZDdDFBRlhjTmdRU2FrNjBSemJGZ1V6UFRvd1pYMWFsMDE4ME5DRW1xblRDVThuTS5Zam5MMVRxdlc1Vll3NExQX1NHMG5BDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClgtUmVxdWVzdC1JZDogMjliYjQwZGUtM2Y3ZC00ZmIwLWI1NzQtNDBkYzBhYzljYzIyDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjM4OjQ3IEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb250ZW50LUxlbmd0aDogMTEyDQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfQVVUSE9SSVpBVElPTiIsIm1lc3NhZ2UiOiJUaGUgYWNjZXNzIHRva2VuIGlzIG5vdCBwcm92aWRlZCwgYXV0aGVudGljYXRpb24gZmFpbGVkLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktdWwtaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wNTI4ZTYzNy0xOTAzLTQyYzEtOGZjNS1mYjEzZGE0MzNlNzcveDIgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29va2llOiBERVZJQ0VfVFlQRT1wcml2YXRlOyBnZW5lc2lzLXNzby1zZXNzaW9uLWF1dGhlbnRpY2F0aW9uLXJlZnJlc2gtdG9rZW49ZXlKcmFXUWlPaUpqY0dsdFkyOXlaVjh3T1RJMU1qQXhOU0lzSW5abGNpSTZJakV1TUNJc0lucHBjQ0k2SWtSbFpteGhkR1VpTENKelpYSWlPaUl4TGpBaWZRLi5fUE40a0NzS0JDNE1wVHBPLkFqdFNsN2t0RC1OV0lGaDBlcmlHeW5GNjJ3VlNqLUR5R2ZaVzgtcnJrWExXU3JTM3dZZ2RyeDVxUHh3NkFteHgta2tPcWZRNlJoRndUSFdFNkNKWFJMMzhBaEhCajVncFFOcTZYMEhuUGZNVFNoZ2JmT2ZQUWV3Zlh0Ym4xZF9pVzc2LVhuNkExNlkyMkR6dndsUDlPOGpTaldUWENjdmh1QXV4NXVRaXdMclg4TURXei1wUGJpNGttYjg5SjBkLWpNaHE2WFRITTNfOUVobzhoZzlKbm1rZmltd1JkY0h0MGJyZXJhUG1BTF9ubi0wRmx2SThDQXp1YmozaTJlekFzZFV3UEhrZjY3eTMxQ0xtZUFwSHduTE9waTAzeGF4WGNYVFl5MGVKdG1xU1FPcmN5Y2VTNnBIMEVNRWJWNmxxeWd3WVVsdTFHd0x5OXB2WndzNHd4WVl0T2I5TUhid0cxZmVkRGtTc05wUmlmakJzaGRtOHRsQlpzUy1TWE93UEE2ZzEwMHh2b1JaOU1Ja3F6SnpEZVB2NmFpYjhZNDQ2WVhsdEJXS1VmTWZpVldTbkNmYTdFd1Vad3JjQnBZN01HY2p6aWdjeFZyWVNCSk5uZ1hkS3VvNVFna05jUDBhc0xTNm1BOVRFaGQ0cmF2X3M4dmZpNVFzbHVTRVdIa3hIQmE5UklzSHNFS0l1Q3lnTEJnS1ZxV1Vxb3J4Z29BaGRCSlpONGRDekhYdl9kd1NBNG9VQzZBWmcxQkY1SnJTVmlrcUxDRXhxajNqNmF2N2dOR3JYZzZKd1EwdWlYTUdXbi1odHdKdmVPNEZxMW83YVRYTWxJOF9YSTY3Y2g5Y0VtRzlDdGU3SWVFTnZXb1EzcUd4ZE1qTGhLTlJXM2JEZnlOWFZDdDFBRlhjTmdRU2FrNjBSemJGZ1V6UFRvd1pYMWFsMDE4ME5DRW1xblRDVThuTS5Zam5MMVRxdlc1Vll3NExQX1NHMG5BDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiAzNzEyMjUzZi04NWE1LTQzNmUtYmNiNi05ODdjNjQ0NzQyYWINCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6Mzg6NDggR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjANClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIngyXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7847595767080456192</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1]]></path>
    <location><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktdWwtaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wNTI4ZTYzNy0xOTAzLTQyYzEtOGZjNS1mYjEzZGE0MzNlNzcvMSBIVFRQLzINCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpPcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogZjcwMjdhNDktYTAzZC00NzViLTgwY2ItNjFlMTY0MGFhZjM4DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTozODoxNiBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDExMg0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX0FVVEhPUklaQVRJT04iLCJtZXNzYWdlIjoiVGhlIGFjY2VzcyB0b2tlbiBpcyBub3QgcHJvdmlkZWQsIGF1dGhlbnRpY2F0aW9uIGZhaWxlZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7575178827625924608</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1]]></path>
    <location><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting">Web Security Academy: Cross-site scripting</a></li>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting/reflected">Web Security Academy: Reflected cross-site scripting</a></li>
	<li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/591.html">CAPEC-591: Reflected XSS</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>obczl&lt;img src=a onerror=alert(1)&gt;msnmy</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response. The proof-of-concept attack demonstrated uses an event handler to introduce arbitrary JavaScript into the document.<br><br>The response does not state that the content type is HTML. The issue is only directly exploitable if a browser can be made to interpret the response as HTML. No modern browser will interpret the response as HTML. However, the issue might be indirectly exploitable if a client-side script processes the response and embeds it into an HTML context.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktdWwtaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wNTI4ZTYzNy0xOTAzLTQyYzEtOGZjNS1mYjEzZGE0MzNlNzcvMW9iY3psJTNjaW1nJTIwc3JjJTNkYSUyMG9uZXJyb3IlM2RhbGVydCgxKSUzZW1zbm15IEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiA4NWIxMzY3Ny0zYmU2LTRlODgtYTdiZS0yNzYwYzFiMDE2YzQNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6Mzc6NDkgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxNTcNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjFvYmN6bDxpbWcgc3JjPWEgb25lcnJvcj1hbGVydCgxKT5tc25teVwiIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1917204320556296192</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1]]></path>
    <location><![CDATA[/employer/v1/policy-ul-individual/certificate-policy-details/0528e637-1903-42c1-8fc5-fb13da433e77/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktdWwtaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wNTI4ZTYzNy0xOTAzLTQyYzEtOGZjNS1mYjEzZGE0MzNlNzcvMW9idWhvaXZlbm0gSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiA5ZTVjOTYyMi02ODJjLTQ0NjYtYTlhZi1mMTMxY2ZjMGY0YWYNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6Mzc6NDUgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjkNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAyDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjFvYnVob2l2ZW5tXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6312841229109983232</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1]]></path>
    <location><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/12]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
    <li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktY2ktaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wOTcyNDhjYy0xZmE0LTM4MjUtOTk0MC1kYmQxN2ViYTJjZWEvMTIgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29va2llOiBERVZJQ0VfVFlQRT1wcml2YXRlOyBnZW5lc2lzLXNzby1zZXNzaW9uLWF1dGhlbnRpY2F0aW9uLXJlZnJlc2gtdG9rZW49ZXlKcmFXUWlPaUpqY0dsdFkyOXlaVjh3T1RJMU1qQXhOU0lzSW5abGNpSTZJakV1TUNJc0lucHBjQ0k2SWtSbFpteGhkR1VpTENKelpYSWlPaUl4TGpBaWZRLi5fUE40a0NzS0JDNE1wVHBPLkFqdFNsN2t0RC1OV0lGaDBlcmlHeW5GNjJ3VlNqLUR5R2ZaVzgtcnJrWExXU3JTM3dZZ2RyeDVxUHh3NkFteHgta2tPcWZRNlJoRndUSFdFNkNKWFJMMzhBaEhCajVncFFOcTZYMEhuUGZNVFNoZ2JmT2ZQUWV3Zlh0Ym4xZF9pVzc2LVhuNkExNlkyMkR6dndsUDlPOGpTaldUWENjdmh1QXV4NXVRaXdMclg4TURXei1wUGJpNGttYjg5SjBkLWpNaHE2WFRITTNfOUVobzhoZzlKbm1rZmltd1JkY0h0MGJyZXJhUG1BTF9ubi0wRmx2SThDQXp1YmozaTJlekFzZFV3UEhrZjY3eTMxQ0xtZUFwSHduTE9waTAzeGF4WGNYVFl5MGVKdG1xU1FPcmN5Y2VTNnBIMEVNRWJWNmxxeWd3WVVsdTFHd0x5OXB2WndzNHd4WVl0T2I5TUhid0cxZmVkRGtTc05wUmlmakJzaGRtOHRsQlpzUy1TWE93UEE2ZzEwMHh2b1JaOU1Ja3F6SnpEZVB2NmFpYjhZNDQ2WVhsdEJXS1VmTWZpVldTbkNmYTdFd1Vad3JjQnBZN01HY2p6aWdjeFZyWVNCSk5uZ1hkS3VvNVFna05jUDBhc0xTNm1BOVRFaGQ0cmF2X3M4dmZpNVFzbHVTRVdIa3hIQmE5UklzSHNFS0l1Q3lnTEJnS1ZxV1Vxb3J4Z29BaGRCSlpONGRDekhYdl9kd1NBNG9VQzZBWmcxQkY1SnJTVmlrcUxDRXhxajNqNmF2N2dOR3JYZzZKd1EwdWlYTUdXbi1odHdKdmVPNEZxMW83YVRYTWxJOF9YSTY3Y2g5Y0VtRzlDdGU3SWVFTnZXb1EzcUd4ZE1qTGhLTlJXM2JEZnlOWFZDdDFBRlhjTmdRU2FrNjBSemJGZ1V6UFRvd1pYMWFsMDE4ME5DRW1xblRDVThuTS5Zam5MMVRxdlc1Vll3NExQX1NHMG5BDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClgtUmVxdWVzdC1JZDogZTU1MTUzYTYtYTFkMC00MTY2LWE0NDYtYjI4Yzc1Y2ZiZGFjDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjM3OjA1IEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb250ZW50LUxlbmd0aDogMTEyDQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfQVVUSE9SSVpBVElPTiIsIm1lc3NhZ2UiOiJUaGUgYWNjZXNzIHRva2VuIGlzIG5vdCBwcm92aWRlZCwgYXV0aGVudGljYXRpb24gZmFpbGVkLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktY2ktaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wOTcyNDhjYy0xZmE0LTM4MjUtOTk0MC1kYmQxN2ViYTJjZWEvYTIgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29va2llOiBERVZJQ0VfVFlQRT1wcml2YXRlOyBnZW5lc2lzLXNzby1zZXNzaW9uLWF1dGhlbnRpY2F0aW9uLXJlZnJlc2gtdG9rZW49ZXlKcmFXUWlPaUpqY0dsdFkyOXlaVjh3T1RJMU1qQXhOU0lzSW5abGNpSTZJakV1TUNJc0lucHBjQ0k2SWtSbFpteGhkR1VpTENKelpYSWlPaUl4TGpBaWZRLi5fUE40a0NzS0JDNE1wVHBPLkFqdFNsN2t0RC1OV0lGaDBlcmlHeW5GNjJ3VlNqLUR5R2ZaVzgtcnJrWExXU3JTM3dZZ2RyeDVxUHh3NkFteHgta2tPcWZRNlJoRndUSFdFNkNKWFJMMzhBaEhCajVncFFOcTZYMEhuUGZNVFNoZ2JmT2ZQUWV3Zlh0Ym4xZF9pVzc2LVhuNkExNlkyMkR6dndsUDlPOGpTaldUWENjdmh1QXV4NXVRaXdMclg4TURXei1wUGJpNGttYjg5SjBkLWpNaHE2WFRITTNfOUVobzhoZzlKbm1rZmltd1JkY0h0MGJyZXJhUG1BTF9ubi0wRmx2SThDQXp1YmozaTJlekFzZFV3UEhrZjY3eTMxQ0xtZUFwSHduTE9waTAzeGF4WGNYVFl5MGVKdG1xU1FPcmN5Y2VTNnBIMEVNRWJWNmxxeWd3WVVsdTFHd0x5OXB2WndzNHd4WVl0T2I5TUhid0cxZmVkRGtTc05wUmlmakJzaGRtOHRsQlpzUy1TWE93UEE2ZzEwMHh2b1JaOU1Ja3F6SnpEZVB2NmFpYjhZNDQ2WVhsdEJXS1VmTWZpVldTbkNmYTdFd1Vad3JjQnBZN01HY2p6aWdjeFZyWVNCSk5uZ1hkS3VvNVFna05jUDBhc0xTNm1BOVRFaGQ0cmF2X3M4dmZpNVFzbHVTRVdIa3hIQmE5UklzSHNFS0l1Q3lnTEJnS1ZxV1Vxb3J4Z29BaGRCSlpONGRDekhYdl9kd1NBNG9VQzZBWmcxQkY1SnJTVmlrcUxDRXhxajNqNmF2N2dOR3JYZzZKd1EwdWlYTUdXbi1odHdKdmVPNEZxMW83YVRYTWxJOF9YSTY3Y2g5Y0VtRzlDdGU3SWVFTnZXb1EzcUd4ZE1qTGhLTlJXM2JEZnlOWFZDdDFBRlhjTmdRU2FrNjBSemJGZ1V6UFRvd1pYMWFsMDE4ME5DRW1xblRDVThuTS5Zam5MMVRxdlc1Vll3NExQX1NHMG5BDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiAwYWIyMDc4NS1mNzQ1LTQ3OGQtOTFiMS00ZWRjMTg4M2Y0MWUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6Mzc6MDYgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjANClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAyDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcImEyXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8078069208052685824</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1]]></path>
    <location><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/11]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
    <li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktY2ktaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wOTcyNDhjYy0xZmE0LTM4MjUtOTk0MC1kYmQxN2ViYTJjZWEvMTEgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29va2llOiBERVZJQ0VfVFlQRT1wcml2YXRlOyBnZW5lc2lzLXNzby1zZXNzaW9uLWF1dGhlbnRpY2F0aW9uLXJlZnJlc2gtdG9rZW49ZXlKcmFXUWlPaUpqY0dsdFkyOXlaVjh3T1RJMU1qQXhOU0lzSW5abGNpSTZJakV1TUNJc0lucHBjQ0k2SWtSbFpteGhkR1VpTENKelpYSWlPaUl4TGpBaWZRLi5fUE40a0NzS0JDNE1wVHBPLkFqdFNsN2t0RC1OV0lGaDBlcmlHeW5GNjJ3VlNqLUR5R2ZaVzgtcnJrWExXU3JTM3dZZ2RyeDVxUHh3NkFteHgta2tPcWZRNlJoRndUSFdFNkNKWFJMMzhBaEhCajVncFFOcTZYMEhuUGZNVFNoZ2JmT2ZQUWV3Zlh0Ym4xZF9pVzc2LVhuNkExNlkyMkR6dndsUDlPOGpTaldUWENjdmh1QXV4NXVRaXdMclg4TURXei1wUGJpNGttYjg5SjBkLWpNaHE2WFRITTNfOUVobzhoZzlKbm1rZmltd1JkY0h0MGJyZXJhUG1BTF9ubi0wRmx2SThDQXp1YmozaTJlekFzZFV3UEhrZjY3eTMxQ0xtZUFwSHduTE9waTAzeGF4WGNYVFl5MGVKdG1xU1FPcmN5Y2VTNnBIMEVNRWJWNmxxeWd3WVVsdTFHd0x5OXB2WndzNHd4WVl0T2I5TUhid0cxZmVkRGtTc05wUmlmakJzaGRtOHRsQlpzUy1TWE93UEE2ZzEwMHh2b1JaOU1Ja3F6SnpEZVB2NmFpYjhZNDQ2WVhsdEJXS1VmTWZpVldTbkNmYTdFd1Vad3JjQnBZN01HY2p6aWdjeFZyWVNCSk5uZ1hkS3VvNVFna05jUDBhc0xTNm1BOVRFaGQ0cmF2X3M4dmZpNVFzbHVTRVdIa3hIQmE5UklzSHNFS0l1Q3lnTEJnS1ZxV1Vxb3J4Z29BaGRCSlpONGRDekhYdl9kd1NBNG9VQzZBWmcxQkY1SnJTVmlrcUxDRXhxajNqNmF2N2dOR3JYZzZKd1EwdWlYTUdXbi1odHdKdmVPNEZxMW83YVRYTWxJOF9YSTY3Y2g5Y0VtRzlDdGU3SWVFTnZXb1EzcUd4ZE1qTGhLTlJXM2JEZnlOWFZDdDFBRlhjTmdRU2FrNjBSemJGZ1V6UFRvd1pYMWFsMDE4ME5DRW1xblRDVThuTS5Zam5MMVRxdlc1Vll3NExQX1NHMG5BDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClgtUmVxdWVzdC1JZDogYmY1ZGY1OWQtMzM2Ny00ZTQyLTk2ZTMtZGU5YzEzOGUxYjg3DQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjM3OjAwIEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb250ZW50LUxlbmd0aDogMTEyDQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfQVVUSE9SSVpBVElPTiIsIm1lc3NhZ2UiOiJUaGUgYWNjZXNzIHRva2VuIGlzIG5vdCBwcm92aWRlZCwgYXV0aGVudGljYXRpb24gZmFpbGVkLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktY2ktaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wOTcyNDhjYy0xZmE0LTM4MjUtOTk0MC1kYmQxN2ViYTJjZWEvejEgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KQ29va2llOiBERVZJQ0VfVFlQRT1wcml2YXRlOyBnZW5lc2lzLXNzby1zZXNzaW9uLWF1dGhlbnRpY2F0aW9uLXJlZnJlc2gtdG9rZW49ZXlKcmFXUWlPaUpqY0dsdFkyOXlaVjh3T1RJMU1qQXhOU0lzSW5abGNpSTZJakV1TUNJc0lucHBjQ0k2SWtSbFpteGhkR1VpTENKelpYSWlPaUl4TGpBaWZRLi5fUE40a0NzS0JDNE1wVHBPLkFqdFNsN2t0RC1OV0lGaDBlcmlHeW5GNjJ3VlNqLUR5R2ZaVzgtcnJrWExXU3JTM3dZZ2RyeDVxUHh3NkFteHgta2tPcWZRNlJoRndUSFdFNkNKWFJMMzhBaEhCajVncFFOcTZYMEhuUGZNVFNoZ2JmT2ZQUWV3Zlh0Ym4xZF9pVzc2LVhuNkExNlkyMkR6dndsUDlPOGpTaldUWENjdmh1QXV4NXVRaXdMclg4TURXei1wUGJpNGttYjg5SjBkLWpNaHE2WFRITTNfOUVobzhoZzlKbm1rZmltd1JkY0h0MGJyZXJhUG1BTF9ubi0wRmx2SThDQXp1YmozaTJlekFzZFV3UEhrZjY3eTMxQ0xtZUFwSHduTE9waTAzeGF4WGNYVFl5MGVKdG1xU1FPcmN5Y2VTNnBIMEVNRWJWNmxxeWd3WVVsdTFHd0x5OXB2WndzNHd4WVl0T2I5TUhid0cxZmVkRGtTc05wUmlmakJzaGRtOHRsQlpzUy1TWE93UEE2ZzEwMHh2b1JaOU1Ja3F6SnpEZVB2NmFpYjhZNDQ2WVhsdEJXS1VmTWZpVldTbkNmYTdFd1Vad3JjQnBZN01HY2p6aWdjeFZyWVNCSk5uZ1hkS3VvNVFna05jUDBhc0xTNm1BOVRFaGQ0cmF2X3M4dmZpNVFzbHVTRVdIa3hIQmE5UklzSHNFS0l1Q3lnTEJnS1ZxV1Vxb3J4Z29BaGRCSlpONGRDekhYdl9kd1NBNG9VQzZBWmcxQkY1SnJTVmlrcUxDRXhxajNqNmF2N2dOR3JYZzZKd1EwdWlYTUdXbi1odHdKdmVPNEZxMW83YVRYTWxJOF9YSTY3Y2g5Y0VtRzlDdGU3SWVFTnZXb1EzcUd4ZE1qTGhLTlJXM2JEZnlOWFZDdDFBRlhjTmdRU2FrNjBSemJGZ1V6UFRvd1pYMWFsMDE4ME5DRW1xblRDVThuTS5Zam5MMVRxdlc1Vll3NExQX1NHMG5BDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiBhM2E0MTE0Zi0wODdmLTQyYWUtYTliMS04MDZmY2Y3NjAzMGUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6Mzc6MDEgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjANClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcInoxXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5593225144891134976</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1]]></path>
    <location><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktY2ktaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wOTcyNDhjYy0xZmE0LTM4MjUtOTk0MC1kYmQxN2ViYTJjZWEvMSBIVFRQLzINCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpPcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogNDU1Njc0NTctN2QzYy00YTY0LWEwMjUtN2Y3ZWFmYmM5NDcwDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTozNjozNyBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDExMg0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX0FVVEhPUklaQVRJT04iLCJtZXNzYWdlIjoiVGhlIGFjY2VzcyB0b2tlbiBpcyBub3QgcHJvdmlkZWQsIGF1dGhlbnRpY2F0aW9uIGZhaWxlZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6749217952352192512</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1]]></path>
    <location><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting">Web Security Academy: Cross-site scripting</a></li>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting/reflected">Web Security Academy: Reflected cross-site scripting</a></li>
	<li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/591.html">CAPEC-591: Reflected XSS</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>pawho&lt;img src=a onerror=alert(1)&gt;ijrqt</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response. The proof-of-concept attack demonstrated uses an event handler to introduce arbitrary JavaScript into the document.<br><br>The response does not state that the content type is HTML. The issue is only directly exploitable if a browser can be made to interpret the response as HTML. No modern browser will interpret the response as HTML. However, the issue might be indirectly exploitable if a client-side script processes the response and embeds it into an HTML context.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktY2ktaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wOTcyNDhjYy0xZmE0LTM4MjUtOTk0MC1kYmQxN2ViYTJjZWEvMXBhd2hvJTNjaW1nJTIwc3JjJTNkYSUyMG9uZXJyb3IlM2RhbGVydCgxKSUzZWlqcnF0IEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiAzOTQ5N2MyMy0yOGJhLTRhNzQtOTUyOC1iNzQxNDI4YjNiOGENCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MzY6MTAgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxNTcNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjFwYXdobzxpbWcgc3JjPWEgb25lcnJvcj1hbGVydCgxKT5panJxdFwiIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3598191681982534656</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1]]></path>
    <location><![CDATA[/employer/v1/policy-ci-individual/certificate-policy-details/097248cc-1fa4-3825-9940-dbd17eba2cea/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktY2ktaW5kaXZpZHVhbC9jZXJ0aWZpY2F0ZS1wb2xpY3ktZGV0YWlscy8wOTcyNDhjYy0xZmE0LTM4MjUtOTk0MC1kYmQxN2ViYTJjZWEvMXZnNDd3NzBianIgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiA5MzQzYTUzYi00NWM4LTRlZTItYTcyMS1hMzI0OTZmMzg3ZWINCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MzY6MDMgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjkNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjF2ZzQ3dzcwYmpyXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9136607200072748032</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1]]></path>
    <location><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/12]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
    <li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktYWNjLWluZGl2aWR1YWwvY2VydGlmaWNhdGUtcG9saWN5LWRldGFpbHMvYTAwYjJiMWQtZWJiOS0zM2IyLTg1NzctZjBlNjExMDZlNjdjLzEyIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvb2tpZTogREVWSUNFX1RZUEU9cHJpdmF0ZTsgZ2VuZXNpcy1zc28tc2Vzc2lvbi1hdXRoZW50aWNhdGlvbi1yZWZyZXNoLXRva2VuPWV5SnJhV1FpT2lKamNHbHRZMjl5WlY4d09USTFNakF4TlNJc0luWmxjaUk2SWpFdU1DSXNJbnBwY0NJNklrUmxabXhoZEdVaUxDSnpaWElpT2lJeExqQWlmUS4uX1BONGtDc0tCQzRNcFRwTy5BanRTbDdrdEQtTldJRmgwZXJpR3luRjYyd1ZTai1EeUdmWlc4LXJya1hMV1NyUzN3WWdkcng1cVB4dzZBbXh4LWtrT3FmUTZSaEZ3VEhXRTZDSlhSTDM4QWhIQmo1Z3BRTnE2WDBIblBmTVRTaGdiZk9mUFFld2ZYdGJuMWRfaVc3Ni1YbjZBMTZZMjJEenZ3bFA5TzhqU2pXVFhDY3ZodUF1eDV1UWl3THJYOE1EV3otcFBiaTRrbWI4OUowZC1qTWhxNlhUSE0zXzlFaG84aGc5Sm5ta2ZpbXdSZGNIdDBicmVyYVBtQUxfbm4tMEZsdkk4Q0F6dWJqM2kyZXpBc2RVd1BIa2Y2N3kzMUNMbWVBcEh3bkxPcGkwM3hheFhjWFRZeTBlSnRtcVNRT3JjeWNlUzZwSDBFTUViVjZscXlnd1lVbHUxR3dMeTlwdlp3czR3eFlZdE9iOU1IYndHMWZlZERrU3NOcFJpZmpCc2hkbTh0bEJac1MtU1hPd1BBNmcxMDB4dm9SWjlNSWtxekp6RGVQdjZhaWI4WTQ0NllYbHRCV0tVZk1maVZXU25DZmE3RXdVWndyY0JwWTdNR2NqemlnY3hWcllTQkpObmdYZEt1bzVRZ2tOY1AwYXNMUzZtQTlURWhkNHJhdl9zOHZmaTVRc2x1U0VXSGt4SEJhOVJJc0hzRUtJdUN5Z0xCZ0tWcVdVcW9yeGdvQWhkQkpaTjRkQ3pIWHZfZHdTQTRvVUM2QVpnMUJGNUpyU1Zpa3FMQ0V4cWozajZhdjdnTkdyWGc2SndRMHVpWE1HV24taHR3SnZlTzRGcTFvN2FUWE1sSThfWEk2N2NoOWNFbUc5Q3RlN0llRU52V29RM3FHeGRNakxoS05SVzNiRGZ5TlhWQ3QxQUZYY05nUVNhazYwUnpiRmdVelBUb3daWDFhbDAxODBOQ0VtcW5UQ1U4bk0uWWpuTDFUcXZXNVZZdzRMUF9TRzBuQQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClgtUmVxdWVzdC1JZDogY2Y0OGZiYTUtY2M0Ny00MDE1LTk3ZWYtYTNmZjBiNDQ1NDA2DQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjM1OjE3IEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb250ZW50LUxlbmd0aDogMTEyDQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfQVVUSE9SSVpBVElPTiIsIm1lc3NhZ2UiOiJUaGUgYWNjZXNzIHRva2VuIGlzIG5vdCBwcm92aWRlZCwgYXV0aGVudGljYXRpb24gZmFpbGVkLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktYWNjLWluZGl2aWR1YWwvY2VydGlmaWNhdGUtcG9saWN5LWRldGFpbHMvYTAwYjJiMWQtZWJiOS0zM2IyLTg1NzctZjBlNjExMDZlNjdjL3QyIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvb2tpZTogREVWSUNFX1RZUEU9cHJpdmF0ZTsgZ2VuZXNpcy1zc28tc2Vzc2lvbi1hdXRoZW50aWNhdGlvbi1yZWZyZXNoLXRva2VuPWV5SnJhV1FpT2lKamNHbHRZMjl5WlY4d09USTFNakF4TlNJc0luWmxjaUk2SWpFdU1DSXNJbnBwY0NJNklrUmxabXhoZEdVaUxDSnpaWElpT2lJeExqQWlmUS4uX1BONGtDc0tCQzRNcFRwTy5BanRTbDdrdEQtTldJRmgwZXJpR3luRjYyd1ZTai1EeUdmWlc4LXJya1hMV1NyUzN3WWdkcng1cVB4dzZBbXh4LWtrT3FmUTZSaEZ3VEhXRTZDSlhSTDM4QWhIQmo1Z3BRTnE2WDBIblBmTVRTaGdiZk9mUFFld2ZYdGJuMWRfaVc3Ni1YbjZBMTZZMjJEenZ3bFA5TzhqU2pXVFhDY3ZodUF1eDV1UWl3THJYOE1EV3otcFBiaTRrbWI4OUowZC1qTWhxNlhUSE0zXzlFaG84aGc5Sm5ta2ZpbXdSZGNIdDBicmVyYVBtQUxfbm4tMEZsdkk4Q0F6dWJqM2kyZXpBc2RVd1BIa2Y2N3kzMUNMbWVBcEh3bkxPcGkwM3hheFhjWFRZeTBlSnRtcVNRT3JjeWNlUzZwSDBFTUViVjZscXlnd1lVbHUxR3dMeTlwdlp3czR3eFlZdE9iOU1IYndHMWZlZERrU3NOcFJpZmpCc2hkbTh0bEJac1MtU1hPd1BBNmcxMDB4dm9SWjlNSWtxekp6RGVQdjZhaWI4WTQ0NllYbHRCV0tVZk1maVZXU25DZmE3RXdVWndyY0JwWTdNR2NqemlnY3hWcllTQkpObmdYZEt1bzVRZ2tOY1AwYXNMUzZtQTlURWhkNHJhdl9zOHZmaTVRc2x1U0VXSGt4SEJhOVJJc0hzRUtJdUN5Z0xCZ0tWcVdVcW9yeGdvQWhkQkpaTjRkQ3pIWHZfZHdTQTRvVUM2QVpnMUJGNUpyU1Zpa3FMQ0V4cWozajZhdjdnTkdyWGc2SndRMHVpWE1HV24taHR3SnZlTzRGcTFvN2FUWE1sSThfWEk2N2NoOWNFbUc5Q3RlN0llRU52V29RM3FHeGRNakxoS05SVzNiRGZ5TlhWQ3QxQUZYY05nUVNhazYwUnpiRmdVelBUb3daWDFhbDAxODBOQ0VtcW5UQ1U4bk0uWWpuTDFUcXZXNVZZdzRMUF9TRzBuQQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiAwM2FlZDIwYy0wNDE3LTQzMWQtOTBlMi0yOWYzM2Q1MzE5MWINCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MzU6MTggR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjANClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcInQyXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5125960554415254528</serialNumber>
    <type>6291672</type>
    <name><![CDATA[Backup file]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1]]></path>
    <location><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/11]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Publicly accessible backups and outdated copies of files can provide attackers with extra attack surface. Depending on the server configuration and file type, they may also expose source code, configuration details, and other information intended to remain secret.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Review the file to identify whether it's intended to be publicly accessible, and remove it from the server's web root if it isn't. It may also be worth auditing the server contents to find other outdated files, and taking measures to prevent the problem from reoccurring. </p>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure/exploiting#source-code-disclosure-via-backup-files">Web Security Academy: Information disclosure via backup files</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
    <li><a href="https://cwe.mitre.org/data/definitions/530.html">CWE-530: Exposure of Backup File to an Unauthorized Control Sphere</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/204.html">CAPEC-204: Lifting Sensitive Data Embedded in Cache</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktYWNjLWluZGl2aWR1YWwvY2VydGlmaWNhdGUtcG9saWN5LWRldGFpbHMvYTAwYjJiMWQtZWJiOS0zM2IyLTg1NzctZjBlNjExMDZlNjdjLzExIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvb2tpZTogREVWSUNFX1RZUEU9cHJpdmF0ZTsgZ2VuZXNpcy1zc28tc2Vzc2lvbi1hdXRoZW50aWNhdGlvbi1yZWZyZXNoLXRva2VuPWV5SnJhV1FpT2lKamNHbHRZMjl5WlY4d09USTFNakF4TlNJc0luWmxjaUk2SWpFdU1DSXNJbnBwY0NJNklrUmxabXhoZEdVaUxDSnpaWElpT2lJeExqQWlmUS4uX1BONGtDc0tCQzRNcFRwTy5BanRTbDdrdEQtTldJRmgwZXJpR3luRjYyd1ZTai1EeUdmWlc4LXJya1hMV1NyUzN3WWdkcng1cVB4dzZBbXh4LWtrT3FmUTZSaEZ3VEhXRTZDSlhSTDM4QWhIQmo1Z3BRTnE2WDBIblBmTVRTaGdiZk9mUFFld2ZYdGJuMWRfaVc3Ni1YbjZBMTZZMjJEenZ3bFA5TzhqU2pXVFhDY3ZodUF1eDV1UWl3THJYOE1EV3otcFBiaTRrbWI4OUowZC1qTWhxNlhUSE0zXzlFaG84aGc5Sm5ta2ZpbXdSZGNIdDBicmVyYVBtQUxfbm4tMEZsdkk4Q0F6dWJqM2kyZXpBc2RVd1BIa2Y2N3kzMUNMbWVBcEh3bkxPcGkwM3hheFhjWFRZeTBlSnRtcVNRT3JjeWNlUzZwSDBFTUViVjZscXlnd1lVbHUxR3dMeTlwdlp3czR3eFlZdE9iOU1IYndHMWZlZERrU3NOcFJpZmpCc2hkbTh0bEJac1MtU1hPd1BBNmcxMDB4dm9SWjlNSWtxekp6RGVQdjZhaWI4WTQ0NllYbHRCV0tVZk1maVZXU25DZmE3RXdVWndyY0JwWTdNR2NqemlnY3hWcllTQkpObmdYZEt1bzVRZ2tOY1AwYXNMUzZtQTlURWhkNHJhdl9zOHZmaTVRc2x1U0VXSGt4SEJhOVJJc0hzRUtJdUN5Z0xCZ0tWcVdVcW9yeGdvQWhkQkpaTjRkQ3pIWHZfZHdTQTRvVUM2QVpnMUJGNUpyU1Zpa3FMQ0V4cWozajZhdjdnTkdyWGc2SndRMHVpWE1HV24taHR3SnZlTzRGcTFvN2FUWE1sSThfWEk2N2NoOWNFbUc5Q3RlN0llRU52V29RM3FHeGRNakxoS05SVzNiRGZ5TlhWQ3QxQUZYY05nUVNhazYwUnpiRmdVelBUb3daWDFhbDAxODBOQ0VtcW5UQ1U4bk0uWWpuTDFUcXZXNVZZdzRMUF9TRzBuQQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClgtUmVxdWVzdC1JZDogZmIxNzEzOWUtYjQ5Ni00NmI5LThhYjgtZTgxNzUyNDk0MmJhDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjM1OjA5IEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb250ZW50LUxlbmd0aDogMTEyDQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfQVVUSE9SSVpBVElPTiIsIm1lc3NhZ2UiOiJUaGUgYWNjZXNzIHRva2VuIGlzIG5vdCBwcm92aWRlZCwgYXV0aGVudGljYXRpb24gZmFpbGVkLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktYWNjLWluZGl2aWR1YWwvY2VydGlmaWNhdGUtcG9saWN5LWRldGFpbHMvYTAwYjJiMWQtZWJiOS0zM2IyLTg1NzctZjBlNjExMDZlNjdjL28xIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCkNvb2tpZTogREVWSUNFX1RZUEU9cHJpdmF0ZTsgZ2VuZXNpcy1zc28tc2Vzc2lvbi1hdXRoZW50aWNhdGlvbi1yZWZyZXNoLXRva2VuPWV5SnJhV1FpT2lKamNHbHRZMjl5WlY4d09USTFNakF4TlNJc0luWmxjaUk2SWpFdU1DSXNJbnBwY0NJNklrUmxabXhoZEdVaUxDSnpaWElpT2lJeExqQWlmUS4uX1BONGtDc0tCQzRNcFRwTy5BanRTbDdrdEQtTldJRmgwZXJpR3luRjYyd1ZTai1EeUdmWlc4LXJya1hMV1NyUzN3WWdkcng1cVB4dzZBbXh4LWtrT3FmUTZSaEZ3VEhXRTZDSlhSTDM4QWhIQmo1Z3BRTnE2WDBIblBmTVRTaGdiZk9mUFFld2ZYdGJuMWRfaVc3Ni1YbjZBMTZZMjJEenZ3bFA5TzhqU2pXVFhDY3ZodUF1eDV1UWl3THJYOE1EV3otcFBiaTRrbWI4OUowZC1qTWhxNlhUSE0zXzlFaG84aGc5Sm5ta2ZpbXdSZGNIdDBicmVyYVBtQUxfbm4tMEZsdkk4Q0F6dWJqM2kyZXpBc2RVd1BIa2Y2N3kzMUNMbWVBcEh3bkxPcGkwM3hheFhjWFRZeTBlSnRtcVNRT3JjeWNlUzZwSDBFTUViVjZscXlnd1lVbHUxR3dMeTlwdlp3czR3eFlZdE9iOU1IYndHMWZlZERrU3NOcFJpZmpCc2hkbTh0bEJac1MtU1hPd1BBNmcxMDB4dm9SWjlNSWtxekp6RGVQdjZhaWI4WTQ0NllYbHRCV0tVZk1maVZXU25DZmE3RXdVWndyY0JwWTdNR2NqemlnY3hWcllTQkpObmdYZEt1bzVRZ2tOY1AwYXNMUzZtQTlURWhkNHJhdl9zOHZmaTVRc2x1U0VXSGt4SEJhOVJJc0hzRUtJdUN5Z0xCZ0tWcVdVcW9yeGdvQWhkQkpaTjRkQ3pIWHZfZHdTQTRvVUM2QVpnMUJGNUpyU1Zpa3FMQ0V4cWozajZhdjdnTkdyWGc2SndRMHVpWE1HV24taHR3SnZlTzRGcTFvN2FUWE1sSThfWEk2N2NoOWNFbUc5Q3RlN0llRU52V29RM3FHeGRNakxoS05SVzNiRGZ5TlhWQ3QxQUZYY05nUVNhazYwUnpiRmdVelBUb3daWDFhbDAxODBOQ0VtcW5UQ1U4bk0uWWpuTDFUcXZXNVZZdzRMUF9TRzBuQQ0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiA1M2VmYjcxYS01NGM5LTQ1ODMtODUzMy05N2YxNTgxNDJjNjUNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MzU6MTAgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjANClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIm8xXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9164063913097947136</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1]]></path>
    <location><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktYWNjLWluZGl2aWR1YWwvY2VydGlmaWNhdGUtcG9saWN5LWRldGFpbHMvYTAwYjJiMWQtZWJiOS0zM2IyLTg1NzctZjBlNjExMDZlNjdjLzEgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KT3JpZ2luOiBodHRwczovL2R4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogYmMxZTNkZTAtMjRmMy00ZjU4LWI0M2MtYzQ0YTkzMGFhNjE0DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTozNDo0MCBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDExMg0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX0FVVEhPUklaQVRJT04iLCJtZXNzYWdlIjoiVGhlIGFjY2VzcyB0b2tlbiBpcyBub3QgcHJvdmlkZWQsIGF1dGhlbnRpY2F0aW9uIGZhaWxlZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2148878083281141760</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1]]></path>
    <location><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting">Web Security Academy: Cross-site scripting</a></li>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting/reflected">Web Security Academy: Reflected cross-site scripting</a></li>
	<li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/591.html">CAPEC-591: Reflected XSS</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the HTML document as plain text between tags. The payload <b>lzt3f&lt;img src=a onerror=alert(1)&gt;j3zz1</b> was submitted in the URL path filename. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response. The proof-of-concept attack demonstrated uses an event handler to introduce arbitrary JavaScript into the document.<br><br>The response does not state that the content type is HTML. The issue is only directly exploitable if a browser can be made to interpret the response as HTML. No modern browser will interpret the response as HTML. However, the issue might be indirectly exploitable if a client-side script processes the response and embeds it into an HTML context.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktYWNjLWluZGl2aWR1YWwvY2VydGlmaWNhdGUtcG9saWN5LWRldGFpbHMvYTAwYjJiMWQtZWJiOS0zM2IyLTg1NzctZjBlNjExMDZlNjdjLzFsenQzZiUzY2ltZyUyMHNyYyUzZGElMjBvbmVycm9yJTNkYWxlcnQoMSklM2VqM3p6MSBIVFRQLzINCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiA3MDlmMjE4ZC05YWFmLTQ1MTMtYjY0OS1mMWM0ZjhiOGU2Y2QNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MzM6NTIgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxNTcNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjFsenQzZjxpbWcgc3JjPWEgb25lcnJvcj1hbGVydCgxKT5qM3p6MVwiIn0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5245996872969322496</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1]]></path>
    <location><![CDATA[/employer/v1/policy-acc-individual/certificate-policy-details/a00b2b1d-ebb9-33b2-8577-f0e61106e67c/1 [URL path filename]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path filename is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9wb2xpY3ktYWNjLWluZGl2aWR1YWwvY2VydGlmaWNhdGUtcG9saWN5LWRldGFpbHMvYTAwYjJiMWQtZWJiOS0zM2IyLTg1NzctZjBlNjExMDZlNjdjLzFrZDJzN2FsZnVqIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiBiZTkyOTQ3NS0zY2U3LTQzNzAtOTFmNS0yZjBhYWI0YmU2NGQNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MzM6MzkgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMjkNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIHJldmlzaW9uTm8gYXMgSW50OiBGb3IgaW5wdXQgc3RyaW5nOiBcIjFrZDJzN2FsZnVqXCIifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5042052096965508096</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/stateprov/load]]></path>
    <location><![CDATA[/employer/v1/lookups/stateprov/load [URL path folder 4]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 4 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL3N0YXRlcHJvdmNwemVhOWVkOGgvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjEvbG9va3Vwcy9zdGF0ZXByb3ZjcHplYTllZDhoL2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MjY6NDIgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6708995086175332352</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/phonetype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/phonetype/load [URL path folder 4]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 4 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL3Bob25ldHlwZTg5dXhyazZlbDMvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjEvbG9va3Vwcy9waG9uZXR5cGU4OXV4cms2ZWwzL2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MjY6MTAgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2343609631170105344</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/addresstype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/addresstype/load [URL path folder 4]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 4 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL2FkZHJlc3N0eXBlM3ZvbTJtZGl0cy9sb2FkIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjEvbG9va3Vwcy9hZGRyZXNzdHlwZTN2b20ybWRpdHMvbG9hZA0KZGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOToyNDoyMSBHTVQNCnNlcnZlcjogaXN0aW8tZW52b3kNCmNvbm5lY3Rpb246IGNsb3NlDQpjb250ZW50LWxlbmd0aDogMA0KDQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7202428174026128384</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/emailtype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/emailtype/load [URL path folder 4]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 4 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL2VtYWlsdHlwZWFtdWIwcjA0ZGgvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjEvbG9va3Vwcy9lbWFpbHR5cGVhbXViMHIwNGRoL2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MjM6MzggR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3972277003929176064</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/stateprov/load]]></path>
    <location><![CDATA[/employer/v1/lookups/stateprov/load [URL path folder 3]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 3 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzcTVsMHdmc3lqaS9zdGF0ZXByb3YvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjEvbG9va3Vwc3E1bDB3ZnN5amkvc3RhdGVwcm92L2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MjI6MjUgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5460861432765971456</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/phonetype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/phonetype/load [URL path folder 3]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 3 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzZWVtZmg0cmhlYS9waG9uZXR5cGUvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjEvbG9va3Vwc2VlbWZoNHJoZWEvcGhvbmV0eXBlL2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MjE6NTMgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4088306849180592128</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/addresstype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/addresstype/load [URL path folder 3]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 3 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzZWhkdzliN29hNS9hZGRyZXNzdHlwZS9sb2FkIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjEvbG9va3Vwc2VoZHc5YjdvYTUvYWRkcmVzc3R5cGUvbG9hZA0KZGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOToyMDowNSBHTVQNCnNlcnZlcjogaXN0aW8tZW52b3kNCmNvbm5lY3Rpb246IGNsb3NlDQpjb250ZW50LWxlbmd0aDogMA0KDQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3901877171456498688</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/update-members-relationship]]></path>
    <location><![CDATA[/employer/v1/member/update-members-relationship]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9tZW1iZXIvdXBkYXRlLW1lbWJlcnMtcmVsYXRpb25zaGlwIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogZDgwMjRlZDctZTAzOS00ZGI3LTg3YWYtNDVlYTQwZmZhODM5DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOToxOTozOCBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDc2DQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfT0JKRUNUX05PVF9GT1VORCIsIm1lc3NhZ2UiOiJPYmplY3Qgbm90IGZvdW5kLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4595625757357323264</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/related-members/]]></path>
    <location><![CDATA[/employer/v1/member/related-members/ [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MXF1bGF3aWN6OXovbWVtYmVyL3JlbGF0ZWQtbWVtYmVycy8gSFRUUC8xLjENCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjFxdWxhd2ljejl6L21lbWJlci9yZWxhdGVkLW1lbWJlcnMvDQpkYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjE5OjI3IEdNVA0Kc2VydmVyOiBpc3Rpby1lbnZveQ0KY29ubmVjdGlvbjogY2xvc2UNCmNvbnRlbnQtbGVuZ3RoOiAwDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>258410579317447680</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/emailtype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/emailtype/load [URL path folder 3]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 3 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzMml4dHRwejFpdy9lbWFpbHR5cGUvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjEvbG9va3VwczJpeHR0cHoxaXcvZW1haWx0eXBlL2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTk6MjEgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6593717930987549696</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/add-members-relationship]]></path>
    <location><![CDATA[/employer/v1/member/add-members-relationship [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MXQ1NXF0aWw0dnkvbWVtYmVyL2FkZC1tZW1iZXJzLXJlbGF0aW9uc2hpcCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjF0NTVxdGlsNHZ5L21lbWJlci9hZGQtbWVtYmVycy1yZWxhdGlvbnNoaXANCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTg6MzIgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6538623443228175360</serialNumber>
    <type>2097920</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/billing-accounts/d68629d7-e9a9-464d-9f03-fb45bc243aa2/invoices]]></path>
    <location><![CDATA[/employer/v1/billing-accounts/d68629d7-e9a9-464d-9f03-fb45bc243aa2/invoices [URL path folder 4]]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting">Web Security Academy: Cross-site scripting</a></li>
	<li><a href="https://portswigger.net/web-security/cross-site-scripting/reflected">Web Security Academy: Reflected cross-site scripting</a></li>
	<li><a href="https://support.portswigger.net/customer/portal/articles/1965737-Methodology_XSS.html">Using Burp to Find XSS issues</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/80.html">CWE-80: Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS)</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/159.html">CWE-159: Failure to Sanitize Special Element</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/591.html">CAPEC-591: Reflected XSS</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 4 is copied into the HTML document as plain text between tags. The payload <b>nan65&lt;a b=c&gt;ftu3y</b> was submitted in the URL path folder 4. This input was echoed unmodified in the application's response.<br><br>This behavior demonstrates that it is possible to inject new HTML tags and attributes into the returned document. An attempt was made to identify a full proof-of-concept attack for injecting arbitrary JavaScript but this was not successful. You should manually examine the application's behavior and attempt to identify any unusual input validation or other obstacles that may be in place.<br><br>Note that a redirection occurred between the attack request and the response containing the echoed input. It is necessary to follow this redirection for the attack to succeed. When the attack is carried out via a browser, the redirection will be followed automatically.<br><br>The response does not state that the content type is HTML. The issue is only directly exploitable if a browser can be made to interpret the response as HTML. No modern browser will interpret the response as HTML. However, the issue might be indirectly exploitable if a client-side script processes the response and embeds it into an HTML context.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9iaWxsaW5nLWFjY291bnRzL25hbjY1JTNjYSUyMGIlM2RjJTNlZnR1M3kvaW52b2ljZXMgSFRUUC8xLjENCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiBjZGU5MDdiOS1lNzNkLTQzYTgtOTRjOC04ZmUwNDAwZmQ0ZjgNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTc6NDYgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxNDENClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIGJpbGxpbmdBY2NvdW50SWQgYXMgVVVJRDogSW52YWxpZCBVVUlEIHN0cmluZzogbmFuNjU8YSBiPWM+ZnR1M3kifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1397388905063742464</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/stateprov/load]]></path>
    <location><![CDATA[/employer/v1/lookups/stateprov/load [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MTIwZ3duNjl1dW0vbG9va3Vwcy9zdGF0ZXByb3YvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjEyMGd3bjY5dXVtL2xvb2t1cHMvc3RhdGVwcm92L2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTg6MDggR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2240141608953764864</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/phonetype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/phonetype/load [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MWQzZ3U3bzV2dWUvbG9va3Vwcy9waG9uZXR5cGUvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjFkM2d1N281dnVlL2xvb2t1cHMvcGhvbmV0eXBlL2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTc6MzYgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3440298190641414144</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/billing-accounts/d68629d7-e9a9-464d-9f03-fb45bc243aa2/invoices]]></path>
    <location><![CDATA[/employer/v1/billing-accounts/d68629d7-e9a9-464d-9f03-fb45bc243aa2/invoices [URL path folder 4]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 4 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9iaWxsaW5nLWFjY291bnRzL2ozN2cwNzZkemkvaW52b2ljZXMgSFRUUC8xLjENCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMCBCYWQgUmVxdWVzdA0KVmFyeTogT3JpZ2luLEFjY2VwdC1FbmNvZGluZw0KWC1SZXF1ZXN0LUlkOiBmOTg3MTIzYS0xNjY5LTQ2NDQtYmY0Yi1hZjE1N2NjN2EwMTcNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTc6MjcgR01UDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb24NCkNvbnRlbnQtTGVuZ3RoOiAxMzQNClgtRW52b3ktVXBzdHJlYW0tU2VydmljZS1UaW1lOiAxDQpTZXJ2ZXI6IGlzdGlvLWVudm95DQoNCnsiZXJyb3JDb2RlIjoiRVJST1JfU0VSVklDRV9CQURfUkVRVUVTVCIsIm1lc3NhZ2UiOiJDYW5ub3QgcGFyc2UgcGFyYW1ldGVyIGJpbGxpbmdBY2NvdW50SWQgYXMgVVVJRDogSW52YWxpZCBVVUlEIHN0cmluZzogajM3ZzA3NmR6aSJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7405872163951748096</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/update-members-relationship]]></path>
    <location><![CDATA[/employer/v1/member/update-members-relationship [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcmp1Z2lhbHV5N20vdjEvbWVtYmVyL3VwZGF0ZS1tZW1iZXJzLXJlbGF0aW9uc2hpcCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXJqdWdpYWx1eTdtL3YxL21lbWJlci91cGRhdGUtbWVtYmVycy1yZWxhdGlvbnNoaXANCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTY6NTggR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9203603127714179072</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/addresstype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/addresstype/load [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MWFlN3hqMjB4OG0vbG9va3Vwcy9hZGRyZXNzdHlwZS9sb2FkIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjFhZTd4ajIweDhtL2xvb2t1cHMvYWRkcmVzc3R5cGUvbG9hZA0KZGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOToxNTo0NyBHTVQNCnNlcnZlcjogaXN0aW8tZW52b3kNCmNvbm5lY3Rpb246IGNsb3NlDQpjb250ZW50LWxlbmd0aDogMA0KDQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8698628241465476096</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/related-members/]]></path>
    <location><![CDATA[/employer/v1/member/related-members/ [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcmtoc3h4eml1eDIvdjEvbWVtYmVyL3JlbGF0ZWQtbWVtYmVycy8gSFRUUC8xLjENCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXJraHN4eHppdXgyL3YxL21lbWJlci9yZWxhdGVkLW1lbWJlcnMvDQpkYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjE1OjA5IEdNVA0Kc2VydmVyOiBpc3Rpby1lbnZveQ0KY29ubmVjdGlvbjogY2xvc2UNCmNvbnRlbnQtbGVuZ3RoOiAwDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2155773400002411520</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/emailtype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/emailtype/load [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MXlwODA4eHZ2Y2gvbG9va3Vwcy9lbWFpbHR5cGUvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjF5cDgwOHh2dmNoL2xvb2t1cHMvZW1haWx0eXBlL2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTU6MDMgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7092716841073234944</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/add-members-relationship]]></path>
    <location><![CDATA[/employer/v1/member/add-members-relationship [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcjdleWRkYWhta2UvdjEvbWVtYmVyL2FkZC1tZW1iZXJzLXJlbGF0aW9uc2hpcCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXI3ZXlkZGFobWtlL3YxL21lbWJlci9hZGQtbWVtYmVycy1yZWxhdGlvbnNoaXANCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTQ6MTUgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3438138180111358976</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/groups/oc0000001003/master-policies]]></path>
    <location><![CDATA[/employer/v1/groups/oc0000001003/master-policies [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MW5reTlubTZwdW0vZ3JvdXBzL29jMDAwMDAwMTAwMy9tYXN0ZXItcG9saWNpZXMgSFRUUC8xLjENCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjFua3k5bm02cHVtL2dyb3Vwcy9vYzAwMDAwMDEwMDMvbWFzdGVyLXBvbGljaWVzDQpkYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjE0OjAxIEdNVA0Kc2VydmVyOiBpc3Rpby1lbnZveQ0KY29ubmVjdGlvbjogY2xvc2UNCmNvbnRlbnQtbGVuZ3RoOiAwDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7135826809789989888</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/stateprov/load]]></path>
    <location><![CDATA[/employer/v1/lookups/stateprov/load [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcjdocXNjcXV4NHovdjEvbG9va3Vwcy9zdGF0ZXByb3YvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXI3aHFzY3F1eDR6L3YxL2xvb2t1cHMvc3RhdGVwcm92L2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTM6NTEgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8832558944856284160</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/documents]]></path>
    <location><![CDATA[/employer/v1/documents [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MTkwbWM5OWZlbGUvZG9jdW1lbnRzIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjE5MG1jOTlmZWxlL2RvY3VtZW50cw0KZGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOToxMzo0NCBHTVQNCnNlcnZlcjogaXN0aW8tZW52b3kNCmNvbm5lY3Rpb246IGNsb3NlDQpjb250ZW50LWxlbmd0aDogMA0KDQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7325141144122356736</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/phonetype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/phonetype/load [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcnNvdXJ6eXdwdnAvdjEvbG9va3Vwcy9waG9uZXR5cGUvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXJzb3Vyenl3cHZwL3YxL2xvb2t1cHMvcGhvbmV0eXBlL2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTM6MTggR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>109713322883224576</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/addresstype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/addresstype/load [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcjhndTR6ZGQycXAvdjEvbG9va3Vwcy9hZGRyZXNzdHlwZS9sb2FkIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXI4Z3U0emRkMnFwL3YxL2xvb2t1cHMvYWRkcmVzc3R5cGUvbG9hZA0KZGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOToxMToyOCBHTVQNCnNlcnZlcjogaXN0aW8tZW52b3kNCmNvbm5lY3Rpb246IGNsb3NlDQpjb250ZW50LWxlbmd0aDogMA0KDQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1966782010623905792</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/claims]]></path>
    <location><![CDATA[/employer/v1/claims [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MW8yZndqaXdsc3YvY2xhaW1zIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjFvMmZ3aml3bHN2L2NsYWltcw0KZGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOToxMDo1MCBHTVQNCnNlcnZlcjogaXN0aW8tZW52b3kNCmNvbm5lY3Rpb246IGNsb3NlDQpjb250ZW50LWxlbmd0aDogMA0KDQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6082468473576220672</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/emailtype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/emailtype/load [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcnBpa2x4NGd0emwvdjEvbG9va3Vwcy9lbWFpbHR5cGUvbG9hZCBIVFRQLzEuMQ0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXJwaWtseDRndHpsL3YxL2xvb2t1cHMvZW1haWx0eXBlL2xvYWQNCmRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MTA6NDQgR01UDQpzZXJ2ZXI6IGlzdGlvLWVudm95DQpjb25uZWN0aW9uOiBjbG9zZQ0KY29udGVudC1sZW5ndGg6IDANCg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>816791168103715840</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/billing-accounts/d68629d7-e9a9-464d-9f03-fb45bc243aa2/invoices]]></path>
    <location><![CDATA[/employer/v1/billing-accounts/d68629d7-e9a9-464d-9f03-fb45bc243aa2/invoices [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MW5lNG1kNjg5YTgvYmlsbGluZy1hY2NvdW50cy9kNjg2MjlkNy1lOWE5LTQ2NGQtOWYwMy1mYjQ1YmMyNDNhYTIvaW52b2ljZXMgSFRUUC8xLjENCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjFuZTRtZDY4OWE4L2JpbGxpbmctYWNjb3VudHMvZDY4NjI5ZDctZTlhOS00NjRkLTlmMDMtZmI0NWJjMjQzYWEyL2ludm9pY2VzDQpkYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjEwOjIyIEdNVA0Kc2VydmVyOiBpc3Rpby1lbnZveQ0KY29ubmVjdGlvbjogY2xvc2UNCmNvbnRlbnQtbGVuZ3RoOiAwDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3678167409189106688</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/billing-accounts/billing-account-summaries-with-products/search]]></path>
    <location><![CDATA[/employer/v1/billing-accounts/billing-account-summaries-with-products/search [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MTgyOGNlcmt0NncvYmlsbGluZy1hY2NvdW50cy9iaWxsaW5nLWFjY291bnQtc3VtbWFyaWVzLXdpdGgtcHJvZHVjdHMvc2VhcmNoIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIvdjE4MjhjZXJrdDZ3L2JpbGxpbmctYWNjb3VudHMvYmlsbGluZy1hY2NvdW50LXN1bW1hcmllcy13aXRoLXByb2R1Y3RzL3NlYXJjaA0KZGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowOTo1MCBHTVQNCnNlcnZlcjogaXN0aW8tZW52b3kNCmNvbm5lY3Rpb246IGNsb3NlDQpjb250ZW50LWxlbmd0aDogMA0KDQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4628375198204107776</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/groups/oc0000001003/master-policies]]></path>
    <location><![CDATA[/employer/v1/groups/oc0000001003/master-policies [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcmo4cHVsaW5qNWUvdjEvZ3JvdXBzL29jMDAwMDAwMTAwMy9tYXN0ZXItcG9saWNpZXMgSFRUUC8xLjENCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXJqOHB1bGluajVlL3YxL2dyb3Vwcy9vYzAwMDAwMDEwMDMvbWFzdGVyLXBvbGljaWVzDQpkYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjA5OjM5IEdNVA0Kc2VydmVyOiBpc3Rpby1lbnZveQ0KY29ubmVjdGlvbjogY2xvc2UNCmNvbnRlbnQtbGVuZ3RoOiAwDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9081168754331300864</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/related-members/]]></path>
    <location><![CDATA[/employer/v1/member/related-members/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9tZW1iZXIvcmVsYXRlZC1tZW1iZXJzLyBIVFRQLzINCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQpPcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogZDg2NmVkODktZTEyNi00ODg3LTlmODItNTZlOGRlYmMxNzdjDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowOTozMyBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDc2DQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfT0JKRUNUX05PVF9GT1VORCIsIm1lc3NhZ2UiOiJPYmplY3Qgbm90IGZvdW5kLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8991541984159916032</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/documents]]></path>
    <location><![CDATA[/employer/v1/documents [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcjJkcm5sdmNjdzYvdjEvZG9jdW1lbnRzIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIyZHJubHZjY3c2L3YxL2RvY3VtZW50cw0KZGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowOToyNiBHTVQNCnNlcnZlcjogaXN0aW8tZW52b3kNCmNvbm5lY3Rpb246IGNsb3NlDQpjb250ZW50LWxlbmd0aDogMA0KDQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7590789550234303488</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/member/add-members-relationship]]></path>
    <location><![CDATA[/employer/v1/member/add-members-relationship]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9tZW1iZXIvYWRkLW1lbWJlcnMtcmVsYXRpb25zaGlwIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogMDE2OTdmOTAtZmJlYi00YmI4LWE4YjYtMDBmYzcwYjZhZjBiDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowODo1MiBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDc2DQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMg0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfT0JKRUNUX05PVF9GT1VORCIsIm1lc3NhZ2UiOiJPYmplY3Qgbm90IGZvdW5kLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8936969694651027456</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/phonetype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/phonetype/load]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL3Bob25ldHlwZS9sb2FkIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogNDY3Nzc0NzUtM2EzNS00YzJkLWE5OTktMjE2MWViNzU3ZTUyDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowNzo1NyBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDc2DQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfT0JKRUNUX05PVF9GT1VORCIsIm1lc3NhZ2UiOiJPYmplY3Qgbm90IGZvdW5kLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>676226415050313728</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/stateprov/load]]></path>
    <location><![CDATA[/employer/v1/lookups/stateprov/load]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL3N0YXRlcHJvdi9sb2FkIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogYjZkMDNlMDEtYjY5Zi00ODQ1LWI5OTQtODRhNDFhMzQxZjFhDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowNzo0NSBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDc2DQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfT0JKRUNUX05PVF9GT1VORCIsIm1lc3NhZ2UiOiJPYmplY3Qgbm90IGZvdW5kLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5455635768082795520</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/emailtype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/emailtype/load]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL2VtYWlsdHlwZS9sb2FkIEhUVFAvMg0KSG9zdDogZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCk9yaWdpbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogMGZhNWY5MDItNGQ0YS00Yjg4LTlmN2QtNzM4MmMwYTViYzk5DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowNjo0MCBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDc2DQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfT0JKRUNUX05PVF9GT1VORCIsIm1lc3NhZ2UiOiJPYmplY3Qgbm90IGZvdW5kLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2960506093946216448</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/claims]]></path>
    <location><![CDATA[/employer/v1/claims [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcjdmZmh0ZWhyMG4vdjEvY2xhaW1zIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXI3ZmZodGVocjBuL3YxL2NsYWltcw0KZGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowNjoyOSBHTVQNCnNlcnZlcjogaXN0aW8tZW52b3kNCmNvbm5lY3Rpb246IGNsb3NlDQpjb250ZW50LWxlbmd0aDogMA0KDQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4837780249072781312</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="">https://dxp-gateway-az03aaebdtd02.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/lookups/addresstype/load]]></path>
    <location><![CDATA[/employer/v1/lookups/addresstype/load]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9sb29rdXBzL2FkZHJlc3N0eXBlL2xvYWQgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmR0ZDAyLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KT3JpZ2luOiBodHRwczovL2R4cC1nYXRld2F5LWF6MDNhYWViZHRkMDIuazhzLmF6MDMuYWFlYi5jbG91ZA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwNCBOb3QgRm91bmQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogNWMzMGE2ZGItZjliMi00MjMyLThmMWYtYzE4ZDVhNjMzNGEzDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJkdGQwMi5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowNjoyNCBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDc2DQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImVycm9yQ29kZSI6IkVSUk9SX1NFUlZJQ0VfT0JKRUNUX05PVF9GT1VORCIsIm1lc3NhZ2UiOiJPYmplY3Qgbm90IGZvdW5kLiJ9]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6427586755508273152</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/billing-accounts/d68629d7-e9a9-464d-9f03-fb45bc243aa2/invoices]]></path>
    <location><![CDATA[/employer/v1/billing-accounts/d68629d7-e9a9-464d-9f03-fb45bc243aa2/invoices [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcjlzdTRhdGJ1OGEvdjEvYmlsbGluZy1hY2NvdW50cy9kNjg2MjlkNy1lOWE5LTQ2NGQtOWYwMy1mYjQ1YmMyNDNhYTIvaW52b2ljZXMgSFRUUC8xLjENCkhvc3Q6IGR4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXI5c3U0YXRidThhL3YxL2JpbGxpbmctYWNjb3VudHMvZDY4NjI5ZDctZTlhOS00NjRkLTlmMDMtZmI0NWJjMjQzYWEyL2ludm9pY2VzDQpkYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA5OjA2OjAyIEdNVA0Kc2VydmVyOiBpc3Rpby1lbnZveQ0KY29ubmVjdGlvbjogY2xvc2UNCmNvbnRlbnQtbGVuZ3RoOiAwDQoNCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2204660668631312384</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="">http://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/billing-accounts/billing-account-summaries-with-products/search]]></path>
    <location><![CDATA[/employer/v1/billing-accounts/billing-account-summaries-with-products/search [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llcjI0MGk2NHdyNnEvdjEvYmlsbGluZy1hY2NvdW50cy9iaWxsaW5nLWFjY291bnQtc3VtbWFyaWVzLXdpdGgtcHJvZHVjdHMvc2VhcmNoIEhUVFAvMS4xDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpsb2NhdGlvbjogaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQvZW1wbG95ZXIyNDBpNjR3cjZxL3YxL2JpbGxpbmctYWNjb3VudHMvYmlsbGluZy1hY2NvdW50LXN1bW1hcmllcy13aXRoLXByb2R1Y3RzL3NlYXJjaA0KZGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowNTozMyBHTVQNCnNlcnZlcjogaXN0aW8tZW52b3kNCmNvbm5lY3Rpb246IGNsb3NlDQpjb250ZW50LWxlbmd0aDogMA0KDQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>737978410845156352</serialNumber>
    <type>2098688</type>
    <name><![CDATA[Cross-origin resource sharing]]></name>
    <host ip="10.32.25.9">https://dxp-gateway-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/employer/v1/documents]]></path>
    <location><![CDATA[/employer/v1/documents]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>An HTML5 cross-origin resource sharing (CORS) policy controls whether and how content running on other domains can perform two-way interaction with the domain that publishes the policy. The policy is fine-grained and can apply access controls per-request based on the URL and other features of the request.</p><p>If another domain is allowed by the policy, then that domain can potentially attack users of the application. If a user is logged in to the application, and visits a domain allowed by the policy, then any malicious content running on that domain can potentially retrieve content from the application, and sometimes carry out actions within the security context of the logged in user.</p>
<p>Even if an allowed domain is not overtly malicious in itself, security vulnerabilities within that domain could potentially be leveraged by an attacker to exploit the trust relationship and attack the application that allows access. CORS policies on pages containing sensitive information should be reviewed to determine whether it is appropriate for the application to trust both the intentions and security posture of any domains granted access.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Any inappropriate domains should be removed from the CORS policy.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
  <li><a href="https://portswigger.net/web-security/cors">Web Security Academy: Cross-origin resource sharing (CORS)</a></li>
  <li> <a href="https://portswigger.net/research/exploiting-cors-misconfigurations-for-bitcoins-and-bounties">Exploiting CORS Misconfigurations</a> </li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/942.html">CWE-942: Overly Permissive Cross-domain Whitelist</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The application implements an HTML5 cross-origin resource sharing (CORS) policy for this request.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9lbXBsb3llci92MS9kb2N1bWVudHMgSFRUUC8yDQpIb3N0OiBkeHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KT3JpZ2luOiBodHRwczovL2R4cC1nYXRld2F5LWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDQwMSBVbmF1dGhvcml6ZWQNClZhcnk6IE9yaWdpbixBY2NlcHQtRW5jb2RpbmcNClgtUmVxdWVzdC1JZDogZDhhZmU1NWEtOTEyNS00ZGZmLWE2MDctYmU4YWUyYjdiMWQ4DQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW46IGh0dHBzOi8vZHhwLWdhdGV3YXktYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2Nlc3MtQ29udHJvbC1FeHBvc2UtSGVhZGVyczogQ29udGVudC1MYW5ndWFnZSxDb250ZW50LVJhbmdlLEFjY2VwdC1SYW5nZXMsWC1QYWdpbmctTGltaXQsWC1QYWdpbmctT2Zmc2V0LFgtVG90YWwtQ291bnQsV1dXLUF1dGhlbnRpY2F0ZSxDb250ZW50LURpc3Bvc2l0aW9uDQpBY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsczogdHJ1ZQ0KRGF0ZTogVGh1LCAzMSBBdWcgMjAyMyAwOTowMjo1NyBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KQ29udGVudC1MZW5ndGg6IDExMg0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KeyJlcnJvckNvZGUiOiJFUlJPUl9TRVJWSUNFX0FVVEhPUklaQVRJT04iLCJtZXNzYWdlIjoiVGhlIGFjY2VzcyB0b2tlbiBpcyBub3QgcHJvdmlkZWQsIGF1dGhlbnRpY2F0aW9uIGZhaWxlZC4ifQ==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2399773680618886144</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items]]></path>
    <location><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items [URL path folder 5]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 5 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjMvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMxZHBtNGVia3UzeS9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDI6NDUgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92My92YXVsdC90ZmhyeHl5Ymw0emJsZ2JqbWs2cXFhdHRwdS8xMzFkcG00ZWJrdTN5L2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5545044935164094464</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items]]></path>
    <location><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items [URL path folder 5]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 5 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjMvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMwODlqaHliZ3p2ai9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDI6MzUgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92My92YXVsdC90ZmhyeHl5Ymw0emJsZ2JqbWs2cXFhdHRwdS8xMzA4OWpoeWJnenZqL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3308750465731471360</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items]]></path>
    <location><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items [URL path folder 4]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 4 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjMvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHVtcnFmZ2c1bzF6LzEzMS9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDA6MjAgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92My92YXVsdC90ZmhyeHl5Ymw0emJsZ2JqbWs2cXFhdHRwdW1ycWZnZzVvMXovMTMxL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2302575243254843392</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items]]></path>
    <location><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items [URL path folder 4]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 4 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjMvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHU2ZTFmdTdidmI4LzEzMC9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDk6MDA6MDkgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92My92YXVsdC90ZmhyeHl5Ymw0emJsZ2JqbWs2cXFhdHRwdTZlMWZ1N2J2YjgvMTMwL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7537575961612812288</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items]]></path>
    <location><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items [URL path folder 3]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 3 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjMvdmF1bHQ2NjUxb3pxMXY0L3RmaHJ4eXlibDR6YmxnYmptazZxcWF0dHB1LzEzMS9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTg6MTMgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92My92YXVsdDY2NTFvenExdjQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMxL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2471145300140291072</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items]]></path>
    <location><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items [URL path folder 3]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 3 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjMvdmF1bHRsNDY2cThhbWdjL3RmaHJ4eXlibDR6YmxnYmptazZxcWF0dHB1LzEzMC9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTg6MDIgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92My92YXVsdGw0NjZxOGFtZ2MvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMwL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5875154287507158016</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items]]></path>
    <location><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjNkbXRxZ3gwd2p4L3ZhdWx0L3RmaHJ4eXlibDR6YmxnYmptazZxcWF0dHB1LzEzMS9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTU6MjIgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92M2RtdHFneDB3angvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMxL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8008954282405344256</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items]]></path>
    <location><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjNkb2xvNWMxZzFxL3ZhdWx0L3RmaHJ4eXlibDR6YmxnYmptazZxcWF0dHB1LzEzMC9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTU6MTEgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92M2RvbG81YzFnMXEvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMwL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3587189099615491072</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v2/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items]]></path>
    <location><![CDATA[/api/v2/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjI2ZDVwNzdmaW13L3ZhdWx0L3RmaHJ4eXlibDR6YmxnYmptazZxcWF0dHB1LzEzMS9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTQ6MTAgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92MjZkNXA3N2ZpbXcvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMxL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5313657119566867456</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v2/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items]]></path>
    <location><![CDATA[/api/v2/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjJ6ZHk3djZxOGJtL3ZhdWx0L3RmaHJ4eXlibDR6YmxnYmptazZxcWF0dHB1LzEzMC9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTM6NDkgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92MnpkeTd2NnE4Ym0vdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMwL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7582770481886308352</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v2/overview]]></path>
    <location><![CDATA[/api/v2/overview [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjJldTY3YXgwYzltL292ZXJ2aWV3IEhUVFAvMS4xDQpIb3N0OiBteS4xcGFzc3dvcmQuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTM6MDcgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92MmV1NjdheDBjOW0vb3ZlcnZpZXcNCg0KPGh0bWw+DQo8aGVhZD48dGl0bGU+MzAxIE1vdmVkIFBlcm1hbmVudGx5PC90aXRsZT48L2hlYWQ+DQo8Ym9keT4NCjxjZW50ZXI+PGgxPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvaDE+PC9jZW50ZXI+DQo8L2JvZHk+DQo8L2h0bWw+DQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3758709380262237184</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items]]></path>
    <location><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGk1MGNjb2Q5amJ2L3YzL3ZhdWx0L3RmaHJ4eXlibDR6YmxnYmptazZxcWF0dHB1LzEzMS9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTI6NTMgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaTUwY2NvZDlqYnYvdjMvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMxL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6382234193363928064</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v2/user/27wvuhcyizh63b3maqg7y7btty]]></path>
    <location><![CDATA[/api/v2/user/27wvuhcyizh63b3maqg7y7btty [URL path folder 2]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 2 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGkvdjJiZ2o5enNlbDhyL3VzZXIvMjd3dnVoY3lpemg2M2IzbWFxZzd5N2J0dHkgSFRUUC8xLjENCkhvc3Q6IG15LjFwYXNzd29yZC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTI6NDkgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaS92MmJnajl6c2VsOHIvdXNlci8yN3d2dWhjeWl6aDYzYjNtYXFnN3k3YnR0eQ0KDQo8aHRtbD4NCjxoZWFkPjx0aXRsZT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L3RpdGxlPjwvaGVhZD4NCjxib2R5Pg0KPGNlbnRlcj48aDE+MzAxIE1vdmVkIFBlcm1hbmVudGx5PC9oMT48L2NlbnRlcj4NCjwvYm9keT4NCjwvaHRtbD4NCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8563915458037971968</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items]]></path>
    <location><![CDATA[/api/v3/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGlmM29hY3R5YmVjL3YzL3ZhdWx0L3RmaHJ4eXlibDR6YmxnYmptazZxcWF0dHB1LzEzMC9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTI6NDQgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaWYzb2FjdHliZWMvdjMvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMwL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1367449725372893184</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v2/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items]]></path>
    <location><![CDATA[/api/v2/vault/tfhrxyybl4zblgbjmk6qqattpu/131/items [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGlyZ2Y5djdlYWh3L3YyL3ZhdWx0L3RmaHJ4eXlibDR6YmxnYmptazZxcWF0dHB1LzEzMS9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTE6NTAgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaXJnZjl2N2VhaHcvdjIvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMxL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3136112377538478080</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v2/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items]]></path>
    <location><![CDATA[/api/v2/vault/tfhrxyybl4zblgbjmk6qqattpu/130/items [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGl3eTF0MDhhMTA2L3YyL3ZhdWx0L3RmaHJ4eXlibDR6YmxnYmptazZxcWF0dHB1LzEzMC9pdGVtcyBIVFRQLzEuMQ0KSG9zdDogbXkuMXBhc3N3b3JkLmNvbQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTE6MjkgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaXd5MXQwOGExMDYvdjIvdmF1bHQvdGZocnh5eWJsNHpibGdiam1rNnFxYXR0cHUvMTMwL2l0ZW1zDQoNCjxodG1sPg0KPGhlYWQ+PHRpdGxlPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvdGl0bGU+PC9oZWFkPg0KPGJvZHk+DQo8Y2VudGVyPjxoMT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L2gxPjwvY2VudGVyPg0KPC9ib2R5Pg0KPC9odG1sPg0K]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>52536437944223744</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v2/overview]]></path>
    <location><![CDATA[/api/v2/overview [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGlscmp3Mml6amYxL3YyL292ZXJ2aWV3IEhUVFAvMS4xDQpIb3N0OiBteS4xcGFzc3dvcmQuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTA6NDkgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaWxyancyaXpqZjEvdjIvb3ZlcnZpZXcNCg0KPGh0bWw+DQo8aGVhZD48dGl0bGU+MzAxIE1vdmVkIFBlcm1hbmVudGx5PC90aXRsZT48L2hlYWQ+DQo8Ym9keT4NCjxjZW50ZXI+PGgxPjMwMSBNb3ZlZCBQZXJtYW5lbnRseTwvaDE+PC9jZW50ZXI+DQo8L2JvZHk+DQo8L2h0bWw+DQo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>9019729583057505280</serialNumber>
    <type>4197376</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="34.206.168.150">http://my.1password.com</host>
    <path><![CDATA[/api/v2/user/27wvuhcyizh63b3maqg7y7btty]]></path>
    <location><![CDATA[/api/v2/user/27wvuhcyizh63b3maqg7y7btty [URL path folder 1]]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/20.html">CWE-20: Improper Input Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/116.html">CWE-116: Improper Encoding or Escaping of Output</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The value of the URL path folder 1 is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hcGlzN2FrcnJwb2pqL3YyL3VzZXIvMjd3dnVoY3lpemg2M2IzbWFxZzd5N2J0dHkgSFRUUC8xLjENCkhvc3Q6IG15LjFwYXNzd29yZC5jb20NCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjcNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQpVcGdyYWRlLUluc2VjdXJlLVJlcXVlc3RzOiAxDQpTZWMtQ0gtVUE6ICIuTm90L0EpQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjExNiIsICJDaHJvbWl1bSI7dj0iMTE2Ig0KU2VjLUNILVVBLVBsYXRmb3JtOiBXaW5kb3dzDQpTZWMtQ0gtVUEtTW9iaWxlOiA/MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMzAxIE1vdmVkIFBlcm1hbmVudGx5DQpTZXJ2ZXI6IGF3c2VsYi8yLjANCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6NTA6MzEgR01UDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbA0KQ29udGVudC1MZW5ndGg6IDEzNA0KQ29ubmVjdGlvbjogY2xvc2UNCkxvY2F0aW9uOiBodHRwczovL215LjFwYXNzd29yZC5jb206NDQzL2FwaXM3YWtycnBvamovdjIvdXNlci8yN3d2dWhjeWl6aDYzYjNtYXFnN3k3YnR0eQ0KDQo8aHRtbD4NCjxoZWFkPjx0aXRsZT4zMDEgTW92ZWQgUGVybWFuZW50bHk8L3RpdGxlPjwvaGVhZD4NCjxib2R5Pg0KPGNlbnRlcj48aDE+MzAxIE1vdmVkIFBlcm1hbmVudGx5PC9oMT48L2NlbnRlcj4NCjwvYm9keT4NCjwvaHRtbD4NCg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8382814029100920832</serialNumber>
    <type>16777472</type>
    <name><![CDATA[TLS certificate]]></name>
    <host ip="3.234.99.64">https://my.1password.com</host>
    <path><![CDATA[/]]></path>
    <location><![CDATA[/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>TLS (or SSL) helps to protect the confidentiality and integrity of information in transit between the browser and server, and to provide authentication of the server's identity. To serve this purpose, the server must present an TLS certificate that is valid for the server's hostname, is issued by a trusted authority and is valid for the current date. If any one of these requirements is not met, TLS connections to the server will not provide the full protection for which TLS is designed.</p>
<p>It should be noted that various attacks exist against TLS in general, and in the context of HTTPS web connections in particular. It may be possible for a determined and suitably-positioned attacker to compromise TLS connections without user detection even when a valid TLS certificate is used. </p>]]></issueBackground>
    <references><![CDATA[<ul><li><a href="https://wiki.mozilla.org/Security/Server_Side_TLS">SSL/TLS Configuration Guide</a></li></ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/326.html">CWE-326: Inadequate Encryption Strength</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The server presented a valid, trusted TLS certificate. This issue is purely informational.<br><br>The server presented the following certificates:<br><br><h4>Server certificate</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>*.1password.com, 1password.com</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>Amazon RSA 2048 M02</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Sat Jun 24 00:00:00 UTC 2023</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Mon Jul 22 23:59:59 UTC 2024</td></tr></table><h4>Certificate chain #1</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>Amazon RSA 2048 M02</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>Amazon Root CA 1</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Tue Aug 23 22:25:30 UTC 2022</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Fri Aug 23 22:25:30 UTC 2030</td></tr></table><h4>Certificate chain #2</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>Amazon Root CA 1</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>Starfield Services Root Certificate Authority - G2</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Mon May 25 12:00:00 UTC 2015</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Thu Dec 31 01:00:00 UTC 2037</td></tr></table><h4>Certificate chain #3</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>Starfield Services Root Certificate Authority - G2</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>Starfield Class 2 Certification Authority</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Wed Sep 02 00:00:00 UTC 2009</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Wed Jun 28 17:39:16 UTC 2034</td></tr></table><h4>Certificate chain #4</h4><table><tr><td><b>Issued to:</b>&nbsp;&nbsp;</td><td>Starfield Class 2 Certification Authority</td></tr><tr><td><b>Issued by:</b>&nbsp;&nbsp;</td><td>Starfield Class 2 Certification Authority</td></tr><tr><td><b>Valid from:</b>&nbsp;&nbsp;</td><td>Tue Jun 29 17:39:16 UTC 2004</td></tr><tr><td><b>Valid to:</b>&nbsp;&nbsp;</td><td>Thu Jun 29 17:39:16 UTC 2034</td></tr></table>]]></issueDetail>
  </issue>
  <issue>
    <serialNumber>2412181481244167168</serialNumber>
    <type>6292992</type>
    <name><![CDATA[Robots.txt file]]></name>
    <host ip="3.234.99.64">https://my.1password.com</host>
    <path><![CDATA[/robots.txt]]></path>
    <location><![CDATA[/robots.txt]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The file robots.txt is used to give instructions to web robots, such as search engine crawlers, about locations within the web site that robots are allowed, or not allowed, to crawl and index.</p>
<p>The presence of the robots.txt does not in itself present any kind of security vulnerability. However, it is often used to identify restricted or private areas of a site's contents. The information in the file may therefore help an attacker to map out the site's contents, especially if some of the locations identified are not linked from elsewhere in the site. If the application relies on robots.txt to protect access to these areas, and does not enforce proper access control over them, then this presents a serious vulnerability.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>The robots.txt file is not itself a security threat, and its correct use can represent good practice for non-security reasons. You should not assume that all web robots will honor the file's instructions. Rather, assume that attackers will pay close attention to any locations identified in the file. Do not rely on robots.txt to provide any kind of protection over unauthorized access.</p>]]></remediationBackground>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The web server contains a robots.txt file.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9yb2JvdHMudHh0IEhUVFAvMS4xDQpIb3N0OiBteS4xcGFzc3dvcmQuY29tDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KDQo=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjQ1OjEzIEdNVA0KQ29udGVudC1UeXBlOiB0ZXh0L3BsYWluDQpDb250ZW50LUxlbmd0aDogMjYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTYwLCBuby1jYWNoZSwgbm8tc3RvcmUNCkNvbnRlbnQtU2VjdXJpdHktUG9saWN5OiBkZWZhdWx0LXNyYyAnbm9uZSc7IGZvcm0tYWN0aW9uICdub25lJzsgZnJhbWUtYW5jZXN0b3JzICdub25lJzsgcmVwb3J0LXVyaSBodHRwczovL2NzcC4xcGFzc3dvcmRzZXJ2aWNlcy5jb20vcmVwb3J0P3RhZ3M9YjVfcHJkOyByZXBvcnQtdG8gY3NwLWVuZHBvaW50OyBzY3JpcHQtc3JjIGh0dHBzOi8vYXBwLjFwYXNzd29yZC5jb20gJ3NoYTI1Ni1LV3NROWY4WngwcGUzUmJSRUhuSXFpYUNteCtVcDBhM3B5T05Zb083RU1BPSc7IHN0eWxlLXNyYyBodHRwczovL2FwcC4xcGFzc3dvcmQuY29tICdzaGEyNTYtZEhsUlpiSUJqQlhvOW03L2tPdElSRUhEb1ZOUVdQSU9QYUlhbjlRNWlLQT0nOyBpbWctc3JjIGRhdGE6IGJsb2I6IGh0dHBzOi8vYy4xcGFzc3dvcmQuY29tIGh0dHBzOi8vYXBwLjFwYXNzd29yZC5jb20gaHR0cHM6Ly9hLjFwYXNzd29yZHVzZXJjb250ZW50LmNvbS8gaHR0cHM6Ly9hLjFwYXNzd29yZHVzZXJjb250ZW50LmNhIGh0dHBzOi8vYS4xcGFzc3dvcmR1c2VyY29udGVudC5ldSBodHRwczovL2EuMXBhc3N3b3JkZW50dXNlcmNvbnRlbnQuY29tICBodHRwczovL2F2YXRhcnMuc2xhY2stZWRnZS5jb20gIGh0dHBzOi8vbWt0LjFwYXNzd29yZC5jbzsgY2hpbGQtc3JjICdzZWxmJyBodHRwczovLyouZHVvc2VjdXJpdHkuY29tIGh0dHBzOi8vKi5kdW9mZWRlcmFsLmNvbSBodHRwczovL21hcC4xcGFzc3dvcmRzZXJ2aWNlcy5jb20gaHR0cHM6Ly9iaWxsaW5nLjFwYXNzd29yZHNlcnZpY2VzLmNvbSBodHRwczovL2R1by4xcGFzc3dvcmRzZXJ2aWNlcy5jb207IHdvcmtlci1zcmMgJ3NlbGYnOyBmcmFtZS1zcmMgJ3NlbGYnIGh0dHBzOi8vKi5kdW9zZWN1cml0eS5jb20gaHR0cHM6Ly8qLmR1b2ZlZGVyYWwuY29tIGh0dHBzOi8vbWFwLjFwYXNzd29yZHNlcnZpY2VzLmNvbSBodHRwczovL2JpbGxpbmcuMXBhc3N3b3Jkc2VydmljZXMuY29tIGh0dHBzOi8vZHVvLjFwYXNzd29yZHNlcnZpY2VzLmNvbSBodHRwczovLzFwYXNzd29yZC5jb20gaHR0cHM6Ly9zdXJ2ZXkuMXBhc3N3b3Jkc2VydmljZXMuY29tIGh0dHBzOi8vZW1haWwtcHJvdmlkZXJzLjFwYXNzd29yZHNlcnZpY2VzLmNvbTsgY29ubmVjdC1zcmMgJ3NlbGYnIGh0dHBzOi8vd2F0Y2h0b3dlci4xcGFzc3dvcmQuY29tIGh0dHBzOi8vYXBpLnB3bmVkcGFzc3dvcmRzLmNvbSBodHRwczovL25vdGlmeS5idWdzbmFnLmNvbSBodHRwczovL2FwcC4xcGFzc3dvcmQuY29tIHdzczovL2I1bi4xcGFzc3dvcmQuY29tIGh0dHBzOi8vZi4xcGFzc3dvcmR1c2VyY29udGVudC5jb20vICouMXBhc3N3b3JkLmNvbSBodHRwczovLyouMXBhc3N3b3JkLmNhIGh0dHBzOi8vKi4xcGFzc3dvcmQuZXUgaHR0cHM6Ly8qLmVudC4xcGFzc3dvcmQuY29tICBodHRwczovL2EuMXBhc3N3b3JkdXNlcmNvbnRlbnQuY29tLyBodHRwczovL2NvbnRhY3QuMXBhc3N3b3Jkc2VydmljZXMuY29tIGh0dHBzOi8vZmxvdy4xcGFzc3dvcmRzZXJ2aWNlcy5jb20gaHR0cHM6Ly9maXJlYmFzZWluc3RhbGxhdGlvbnMuZ29vZ2xlYXBpcy5jb20gaHR0cHM6Ly9mY21yZWdpc3RyYXRpb25zLmdvb2dsZWFwaXMuY29tICBodHRwczovL280NTA1MDkzMDk3NTg2Njg4LmluZ2VzdC5zZW50cnkuaW87IHVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMNCkNyb3NzLU9yaWdpbi1PcGVuZXItUG9saWN5OiBzYW1lLW9yaWdpbg0KUGVybWlzc2lvbnMtUG9saWN5OiBpbnRlcmVzdC1jb2hvcnQ9KCkNClJlZmVycmVyLVBvbGljeTogbm8tcmVmZXJyZXINClJlcG9ydC1FbmRwb2ludHM6IGNzcC1lbmRwb2ludCA9Imh0dHBzOi8vY3NwLjFwYXNzd29yZHNlcnZpY2VzLmNvbS9yZXBvcnQ/dGFncz1iNV9wcmQiDQpSZXBvcnQtVG86IHsiZW5kcG9pbnRzIjpbeyJ1cmwiOiJodHRwczovL2NzcC4xcGFzc3dvcmRzZXJ2aWNlcy5jb20vcmVwb3J0P3RhZ3M9YjVfcHJkIn1dLCJncm91cCI6ImNzcC1lbmRwb2ludCIsIm1heF9hZ2UiOjYwNDgwMH0NClN0cmljdC1UcmFuc3BvcnQtU2VjdXJpdHk6IG1heC1hZ2U9MzE1MzYwMDA7IGluY2x1ZGVTdWJEb21haW5zOyBwcmVsb2FkDQpYLUNvbnRlbnQtVHlwZS1PcHRpb25zOiBub3NuaWZmDQpYLUZyYW1lLU9wdGlvbnM6IERFTlkNCg0KVXNlci1hZ2VudDogKgpEaXNhbGxvdzogLwo=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>7944298818445445120</serialNumber>
    <type>7340288</type>
    <name><![CDATA[Cacheable HTTPS response]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/robots.txt]]></path>
    <location><![CDATA[/robots.txt]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Unless directed otherwise, browsers may store a local cached copy of content received from web servers. Some browsers, including Internet Explorer, cache content accessed via HTTPS. If sensitive information in application responses is stored in the local cache, then this may be retrieved by other users who have access to the same computer at a future time.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Applications should return caching directives instructing browsers not to store local copies of any sensitive data. Often, this can be achieved by configuring the web server to prevent caching for relevant paths within the web root. Alternatively, most web development platforms allow you to control the server's caching directives from within individual scripts. Ideally, the web server should return the following HTTP headers in all responses containing sensitive content:</p>
<ul>
<li>Cache-control: no-store</li><li>Pragma: no-cache</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure">Web Security Academy: Information disclosure</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/524.html">CWE-524: Information Exposure Through Caching</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9yb2JvdHMudHh0IEhUVFAvMg0KSG9zdDogcGVyc29uYS1lbXBsb3llci1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0wDQpMYXN0LU1vZGlmaWVkOiBXZWQsIDA5IEF1ZyAyMDIzIDA2OjIxOjEyIEdNVA0KRXRhZzogVy8iMmQzLTE4OWQ4ZjRkN2MwIg0KQ29udGVudC1MZW5ndGg6IDcyMw0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIyOjM0IEdNVA0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KPCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJsYXlvdXQtcGYgbGF5b3V0LXBmLWZpeGVkIj48aGVhZD48dGl0bGU+RW1wbG95ZXIgUG9ydGFsPC90aXRsZT48bWV0YSBjaGFyc2V0PSJVVEYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xIi8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiIvPjxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPSI+PC9zY3JpcHQ+PHNjcmlwdD53aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICAgICAgZnVuY3Rpb24gZ3RhZygpe2RhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7fQogICAgICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOwogICAgICAgICAgICBndGFnKCdjb25maWcnLCAgJycpOzwvc2NyaXB0PjxsaW5rIGhyZWY9Ii8yLnN0eWxlLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij48bGluayBocmVmPSIvc3R5bGUuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48ZGl2IGlkPSJhcHAtY29udGFpbmVyIi8+PHNjcmlwdCBzcmM9Ii8yLmJ1bmRsZS5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Ii9idW5kbGUuanMiPjwvc2NyaXB0PjwvYm9keT48L2h0bWw+]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1136309794927553536</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/robots.txt]]></path>
    <location><![CDATA[/robots.txt]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/clickjacking">Web Security Academy: Clickjacking</a></li>
    <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
    <li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
    <li><a href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/103.html">CAPEC-103: Clickjacking</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9yb2JvdHMudHh0IEhUVFAvMg0KSG9zdDogcGVyc29uYS1lbXBsb3llci1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0wDQpMYXN0LU1vZGlmaWVkOiBXZWQsIDA5IEF1ZyAyMDIzIDA2OjIxOjEyIEdNVA0KRXRhZzogVy8iMmQzLTE4OWQ4ZjRkN2MwIg0KQ29udGVudC1MZW5ndGg6IDcyMw0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIyOjM0IEdNVA0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KPCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJsYXlvdXQtcGYgbGF5b3V0LXBmLWZpeGVkIj48aGVhZD48dGl0bGU+RW1wbG95ZXIgUG9ydGFsPC90aXRsZT48bWV0YSBjaGFyc2V0PSJVVEYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xIi8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiIvPjxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPSI+PC9zY3JpcHQ+PHNjcmlwdD53aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICAgICAgZnVuY3Rpb24gZ3RhZygpe2RhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7fQogICAgICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOwogICAgICAgICAgICBndGFnKCdjb25maWcnLCAgJycpOzwvc2NyaXB0PjxsaW5rIGhyZWY9Ii8yLnN0eWxlLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij48bGluayBocmVmPSIvc3R5bGUuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48ZGl2IGlkPSJhcHAtY29udGFpbmVyIi8+PHNjcmlwdCBzcmM9Ii8yLmJ1bmRsZS5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Ii9idW5kbGUuanMiPjwvc2NyaXB0PjwvYm9keT48L2h0bWw+]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5959095399946878976</serialNumber>
    <type>5244160</type>
    <name><![CDATA[Cross-domain script include]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/product-wholelife-icon.png]]></path>
    <location><![CDATA[/product-wholelife-icon.png]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>When an application includes a script from an external domain, this script is executed by the browser within the security context of the invoking application. The script can therefore do anything that the application's own scripts can do, such as accessing application data and performing actions within the context of the current user.</p>
<p>If you include a script from an external domain, then you are trusting that domain with the data and functionality of your application, and you are trusting the domain's own security to prevent an attacker from modifying the script to perform malicious actions within your application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Scripts should ideally not be included from untrusted domains. Applications that rely on static third-party scripts should consider using Subresource Integrity to make browsers verify them, or copying the contents of these scripts onto their own domain and including them from there. If that is not possible (e.g. for licensing reasons) then consider reimplementing the script's functionality within application code.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
<li>
<a href="https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity">Subresource Integrity</a>
</li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/829.html">CWE-829: Inclusion of Functionality from Untrusted Control Sphere</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The response dynamically includes the following script from another domain:<ul><li>https://www.googletagmanager.com/gtag/js?id=</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[https://www.googletagmanager.com/gtag/js?id=]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wcm9kdWN0LXdob2xlbGlmZS1pY29uLnBuZyBIVFRQLzINCkhvc3Q6IHBlcnNvbmEtZW1wbG95ZXItYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0wDQpMYXN0LU1vZGlmaWVkOiBXZWQsIDA5IEF1ZyAyMDIzIDA2OjIxOjEyIEdNVA0KRXRhZzogVy8iMmQzLTE4OWQ4ZjRkN2MwIg0KQ29udGVudC1MZW5ndGg6IDcyMw0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIxOjMzIEdNVA0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KPCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJsYXlvdXQtcGYgbGF5b3V0LXBmLWZpeGVkIj48aGVhZD48dGl0bGU+RW1wbG95ZXIgUG9ydGFsPC90aXRsZT48bWV0YSBjaGFyc2V0PSJVVEYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xIi8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiIvPjxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPSI+PC9zY3JpcHQ+PHNjcmlwdD53aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICAgICAgZnVuY3Rpb24gZ3RhZygpe2RhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7fQogICAgICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOwogICAgICAgICAgICBndGFnKCdjb25maWcnLCAgJycpOzwvc2NyaXB0PjxsaW5rIGhyZWY9Ii8yLnN0eWxlLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij48bGluayBocmVmPSIvc3R5bGUuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48ZGl2IGlkPSJhcHAtY29udGFpbmVyIi8+PHNjcmlwdCBzcmM9Ii8yLmJ1bmRsZS5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Ii9idW5kbGUuanMiPjwvc2NyaXB0PjwvYm9keT48L2h0bWw+]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>6828684093628832768</serialNumber>
    <type>5244160</type>
    <name><![CDATA[Cross-domain script include]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/robots.txt]]></path>
    <location><![CDATA[/robots.txt]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>When an application includes a script from an external domain, this script is executed by the browser within the security context of the invoking application. The script can therefore do anything that the application's own scripts can do, such as accessing application data and performing actions within the context of the current user.</p>
<p>If you include a script from an external domain, then you are trusting that domain with the data and functionality of your application, and you are trusting the domain's own security to prevent an attacker from modifying the script to perform malicious actions within your application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Scripts should ideally not be included from untrusted domains. Applications that rely on static third-party scripts should consider using Subresource Integrity to make browsers verify them, or copying the contents of these scripts onto their own domain and including them from there. If that is not possible (e.g. for licensing reasons) then consider reimplementing the script's functionality within application code.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
<li>
<a href="https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity">Subresource Integrity</a>
</li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/829.html">CWE-829: Inclusion of Functionality from Untrusted Control Sphere</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The response dynamically includes the following script from another domain:<ul><li>https://www.googletagmanager.com/gtag/js?id=</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[https://www.googletagmanager.com/gtag/js?id=]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9yb2JvdHMudHh0IEhUVFAvMg0KSG9zdDogcGVyc29uYS1lbXBsb3llci1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVM7cT0wLjksZW47cT0wLjgNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMTYuMC41ODQ1LjExMSBTYWZhcmkvNTM3LjM2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0wDQpMYXN0LU1vZGlmaWVkOiBXZWQsIDA5IEF1ZyAyMDIzIDA2OjIxOjEyIEdNVA0KRXRhZzogVy8iMmQzLTE4OWQ4ZjRkN2MwIg0KQ29udGVudC1MZW5ndGg6IDcyMw0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIyOjM0IEdNVA0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KPCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJsYXlvdXQtcGYgbGF5b3V0LXBmLWZpeGVkIj48aGVhZD48dGl0bGU+RW1wbG95ZXIgUG9ydGFsPC90aXRsZT48bWV0YSBjaGFyc2V0PSJVVEYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xIi8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiIvPjxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPSI+PC9zY3JpcHQ+PHNjcmlwdD53aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICAgICAgZnVuY3Rpb24gZ3RhZygpe2RhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7fQogICAgICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOwogICAgICAgICAgICBndGFnKCdjb25maWcnLCAgJycpOzwvc2NyaXB0PjxsaW5rIGhyZWY9Ii8yLnN0eWxlLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij48bGluayBocmVmPSIvc3R5bGUuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48ZGl2IGlkPSJhcHAtY29udGFpbmVyIi8+PHNjcmlwdCBzcmM9Ii8yLmJ1bmRsZS5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Ii9idW5kbGUuanMiPjwvc2NyaXB0PjwvYm9keT48L2h0bWw+]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8245316670346790912</serialNumber>
    <type>7340288</type>
    <name><![CDATA[Cacheable HTTPS response]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/product-wholelife-icon.png]]></path>
    <location><![CDATA[/product-wholelife-icon.png]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Unless directed otherwise, browsers may store a local cached copy of content received from web servers. Some browsers, including Internet Explorer, cache content accessed via HTTPS. If sensitive information in application responses is stored in the local cache, then this may be retrieved by other users who have access to the same computer at a future time.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Applications should return caching directives instructing browsers not to store local copies of any sensitive data. Often, this can be achieved by configuring the web server to prevent caching for relevant paths within the web root. Alternatively, most web development platforms allow you to control the server's caching directives from within individual scripts. Ideally, the web server should return the following HTTP headers in all responses containing sensitive content:</p>
<ul>
<li>Cache-control: no-store</li><li>Pragma: no-cache</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure">Web Security Academy: Information disclosure</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/524.html">CWE-524: Information Exposure Through Caching</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wcm9kdWN0LXdob2xlbGlmZS1pY29uLnBuZyBIVFRQLzINCkhvc3Q6IHBlcnNvbmEtZW1wbG95ZXItYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0wDQpMYXN0LU1vZGlmaWVkOiBXZWQsIDA5IEF1ZyAyMDIzIDA2OjIxOjEyIEdNVA0KRXRhZzogVy8iMmQzLTE4OWQ4ZjRkN2MwIg0KQ29udGVudC1MZW5ndGg6IDcyMw0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIxOjMzIEdNVA0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KPCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJsYXlvdXQtcGYgbGF5b3V0LXBmLWZpeGVkIj48aGVhZD48dGl0bGU+RW1wbG95ZXIgUG9ydGFsPC90aXRsZT48bWV0YSBjaGFyc2V0PSJVVEYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xIi8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiIvPjxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPSI+PC9zY3JpcHQ+PHNjcmlwdD53aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICAgICAgZnVuY3Rpb24gZ3RhZygpe2RhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7fQogICAgICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOwogICAgICAgICAgICBndGFnKCdjb25maWcnLCAgJycpOzwvc2NyaXB0PjxsaW5rIGhyZWY9Ii8yLnN0eWxlLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij48bGluayBocmVmPSIvc3R5bGUuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48ZGl2IGlkPSJhcHAtY29udGFpbmVyIi8+PHNjcmlwdCBzcmM9Ii8yLmJ1bmRsZS5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Ii9idW5kbGUuanMiPjwvc2NyaXB0PjwvYm9keT48L2h0bWw+]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>633310731676227584</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/product-wholelife-icon.png]]></path>
    <location><![CDATA[/product-wholelife-icon.png]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/clickjacking">Web Security Academy: Clickjacking</a></li>
    <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
    <li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
    <li><a href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/103.html">CAPEC-103: Clickjacking</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9wcm9kdWN0LXdob2xlbGlmZS1pY29uLnBuZyBIVFRQLzINCkhvc3Q6IHBlcnNvbmEtZW1wbG95ZXItYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43DQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTO3E9MC45LGVuO3E9MC44DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTE2LjAuNTg0NS4xMTEgU2FmYXJpLzUzNy4zNg0KQ29ubmVjdGlvbjogY2xvc2UNCkNhY2hlLUNvbnRyb2w6IG1heC1hZ2U9MA0KVXBncmFkZS1JbnNlY3VyZS1SZXF1ZXN0czogMQ0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0wDQpMYXN0LU1vZGlmaWVkOiBXZWQsIDA5IEF1ZyAyMDIzIDA2OjIxOjEyIEdNVA0KRXRhZzogVy8iMmQzLTE4OWQ4ZjRkN2MwIg0KQ29udGVudC1MZW5ndGg6IDcyMw0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIxOjMzIEdNVA0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KPCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJsYXlvdXQtcGYgbGF5b3V0LXBmLWZpeGVkIj48aGVhZD48dGl0bGU+RW1wbG95ZXIgUG9ydGFsPC90aXRsZT48bWV0YSBjaGFyc2V0PSJVVEYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xIi8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiIvPjxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPSI+PC9zY3JpcHQ+PHNjcmlwdD53aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICAgICAgZnVuY3Rpb24gZ3RhZygpe2RhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7fQogICAgICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOwogICAgICAgICAgICBndGFnKCdjb25maWcnLCAgJycpOzwvc2NyaXB0PjxsaW5rIGhyZWY9Ii8yLnN0eWxlLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij48bGluayBocmVmPSIvc3R5bGUuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48ZGl2IGlkPSJhcHAtY29udGFpbmVyIi8+PHNjcmlwdCBzcmM9Ii8yLmJ1bmRsZS5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Ii9idW5kbGUuanMiPjwvc2NyaXB0PjwvYm9keT48L2h0bWw+]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>5557048718362062848</serialNumber>
    <type>7340288</type>
    <name><![CDATA[Cacheable HTTPS response]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/accountsettings]]></path>
    <location><![CDATA[/accountsettings]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Unless directed otherwise, browsers may store a local cached copy of content received from web servers. Some browsers, including Internet Explorer, cache content accessed via HTTPS. If sensitive information in application responses is stored in the local cache, then this may be retrieved by other users who have access to the same computer at a future time.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Applications should return caching directives instructing browsers not to store local copies of any sensitive data. Often, this can be achieved by configuring the web server to prevent caching for relevant paths within the web root. Alternatively, most web development platforms allow you to control the server's caching directives from within individual scripts. Ideally, the web server should return the following HTTP headers in all responses containing sensitive content:</p>
<ul>
<li>Cache-control: no-store</li><li>Pragma: no-cache</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure">Web Security Academy: Information disclosure</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/524.html">CWE-524: Information Exposure Through Caching</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hY2NvdW50c2V0dGluZ3MgSFRUUC8yDQpIb3N0OiBwZXJzb25hLWVtcGxveWVyLWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0wDQpMYXN0LU1vZGlmaWVkOiBXZWQsIDA5IEF1ZyAyMDIzIDA2OjIxOjEyIEdNVA0KRXRhZzogVy8iMmQzLTE4OWQ4ZjRkN2MwIg0KQ29udGVudC1MZW5ndGg6IDcyMw0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIyOjI1IEdNVA0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KPCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJsYXlvdXQtcGYgbGF5b3V0LXBmLWZpeGVkIj48aGVhZD48dGl0bGU+RW1wbG95ZXIgUG9ydGFsPC90aXRsZT48bWV0YSBjaGFyc2V0PSJVVEYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xIi8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiIvPjxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPSI+PC9zY3JpcHQ+PHNjcmlwdD53aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICAgICAgZnVuY3Rpb24gZ3RhZygpe2RhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7fQogICAgICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOwogICAgICAgICAgICBndGFnKCdjb25maWcnLCAgJycpOzwvc2NyaXB0PjxsaW5rIGhyZWY9Ii8yLnN0eWxlLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij48bGluayBocmVmPSIvc3R5bGUuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48ZGl2IGlkPSJhcHAtY29udGFpbmVyIi8+PHNjcmlwdCBzcmM9Ii8yLmJ1bmRsZS5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Ii9idW5kbGUuanMiPjwvc2NyaXB0PjwvYm9keT48L2h0bWw+]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>4001018052813790208</serialNumber>
    <type>5244160</type>
    <name><![CDATA[Cross-domain script include]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/accountsettings]]></path>
    <location><![CDATA[/accountsettings]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>When an application includes a script from an external domain, this script is executed by the browser within the security context of the invoking application. The script can therefore do anything that the application's own scripts can do, such as accessing application data and performing actions within the context of the current user.</p>
<p>If you include a script from an external domain, then you are trusting that domain with the data and functionality of your application, and you are trusting the domain's own security to prevent an attacker from modifying the script to perform malicious actions within your application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Scripts should ideally not be included from untrusted domains. Applications that rely on static third-party scripts should consider using Subresource Integrity to make browsers verify them, or copying the contents of these scripts onto their own domain and including them from there. If that is not possible (e.g. for licensing reasons) then consider reimplementing the script's functionality within application code.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
<li>
<a href="https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity">Subresource Integrity</a>
</li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/829.html">CWE-829: Inclusion of Functionality from Untrusted Control Sphere</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The response dynamically includes the following script from another domain:<ul><li>https://www.googletagmanager.com/gtag/js?id=</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[https://www.googletagmanager.com/gtag/js?id=]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hY2NvdW50c2V0dGluZ3MgSFRUUC8yDQpIb3N0OiBwZXJzb25hLWVtcGxveWVyLWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0wDQpMYXN0LU1vZGlmaWVkOiBXZWQsIDA5IEF1ZyAyMDIzIDA2OjIxOjEyIEdNVA0KRXRhZzogVy8iMmQzLTE4OWQ4ZjRkN2MwIg0KQ29udGVudC1MZW5ndGg6IDcyMw0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIyOjI1IEdNVA0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KPCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJsYXlvdXQtcGYgbGF5b3V0LXBmLWZpeGVkIj48aGVhZD48dGl0bGU+RW1wbG95ZXIgUG9ydGFsPC90aXRsZT48bWV0YSBjaGFyc2V0PSJVVEYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xIi8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiIvPjxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPSI+PC9zY3JpcHQ+PHNjcmlwdD53aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICAgICAgZnVuY3Rpb24gZ3RhZygpe2RhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7fQogICAgICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOwogICAgICAgICAgICBndGFnKCdjb25maWcnLCAgJycpOzwvc2NyaXB0PjxsaW5rIGhyZWY9Ii8yLnN0eWxlLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij48bGluayBocmVmPSIvc3R5bGUuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48ZGl2IGlkPSJhcHAtY29udGFpbmVyIi8+PHNjcmlwdCBzcmM9Ii8yLmJ1bmRsZS5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Ii9idW5kbGUuanMiPjwvc2NyaXB0PjwvYm9keT48L2h0bWw+]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1911863377639530496</serialNumber>
    <type>6291968</type>
    <name><![CDATA[Email addresses disclosed]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/config.json/]]></path>
    <location><![CDATA[/config.json/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The presence of email addresses within application responses does not necessarily constitute a security vulnerability. Email addresses may appear intentionally within contact information, and many applications (such as web mail) include arbitrary third-party email addresses within their core content.</p>
<p>However, email addresses of developers and other individuals (whether appearing on-screen or hidden within page source) may disclose information that is useful to an attacker; for example, they may represent usernames that can be used at the application's login, and they may be used in social engineering attacks against the organization's personnel. Unnecessary or excessive disclosure of email addresses may also lead to an increase in the volume of spam email received.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Consider removing any email addresses that are unnecessary, or replacing personal addresses with anonymous mailbox addresses (such as helpdesk@example.com).</p>
<p>To reduce the quantity of spam sent to anonymous mailbox addresses, consider hiding the email address and instead providing a form that generates the email server-side, protected by a CAPTCHA if necessary. </p>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure">Web Security Academy: Information disclosure</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/200.html">CWE-200: Information Exposure</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
</ul>]]></vulnerabilityClassifications>
    <issueDetail><![CDATA[The following email addresses were disclosed in the response:<ul><li>groupcustomercare@atlam.com</li><li>groupclaims@atlam.com</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[groupcustomercare@atlam.com]]></issueDetailItem>
      <issueDetailItem><![CDATA[groupclaims@atlam.com]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9jb25maWcuanNvbi8gSFRUUC8yDQpIb3N0OiBwZXJzb25hLWVtcGxveWVyLWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL3BlcnNvbmEtZW1wbG95ZXItYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkL2FjY291bnRzZXR0aW5ncw0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgNCkV0YWc6IFcvImUxYy05OVBxWHlIMVlrMDJBQU4waVUvU2xLMlRxNGMiDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6MjI6MjQgR01UDQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImJhc2VQYXRoIjoiaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQ6NDQzIiwiZGlzYWJsZUNhcHRjaGEiOiJmYWxzZSIsInNpdGVLZXkiOiI2TGVJeEFjVEFBQUFBSmNaVlJxeUhoNzFVTUlFR05RX01YamlaS2hJIiwic2hvd1ZlcnNpb24iOnRydWUsInZlcnNpb24iOiIyMi4xMi4wIiwic2VydmVyVGltZVpvbmUiOiJVVEMiLCJ1c2VyQWdyZWVtZW50TGluayI6eyJ0ZXJtc09mVXNlIjoiaHR0cHM6Ly9hYWVtcGxveWVlYmVuZWZpdHMuY29tL1Rlcm1zIiwicHJpdmFjeVBvbGljeSI6Imh0dHBzOi8vYWFlbXBsb3llZWJlbmVmaXRzLmNvbS9Qcml2YWN5In0sImZvcm1zIjp7ImZpbmFuY2lhbEZvcm1zIjpbeyJuYW1lIjoiQmFuayBEcmFmdCBBdXRob3JpemF0aW9uIExpc3QgQmlsbCIsImxpbmsiOiJodHRwczovL2FnZW50LmJmbGljLmNvbS9MaWJyYXJ5L0FBRUIlMjBQUkYlMjAwNTgyJTIwKDMtMjEpX0ZpbGxhYmxlLnBkZiJ9LHsibmFtZSI6IkZpbmFuY2lhbCBBbm51aXR5IFRyYW5zYWN0aW9ucyBGb3JtIiwibGluayI6Imh0dHBzOi8vYWdlbnQuYmZsaWMuY29tL0xpYnJhcnkvQUFFQiUyMEZpbiUyMEFubiUyMCg1LTIxKS5wZGYifSx7Im5hbWUiOiJGaW5hbmNpYWwgVHJhbnNhY3Rpb25zIEZvcm0iLCJsaW5rIjoiaHR0cHM6Ly9hZ2VudC5iZmxpYy5jb20vTGlicmFyeS9BQUVCJTIwRmluJTIwVHJhbnMlMjAoNS0yMSkucGRmIn1dLCJjbGFpbXMiOlt7Im5hbWUiOiJBdXRob3JpemF0aW9uIHRvIERpc2Nsb3NlIEhlYWx0aCBJbmZvcm1hdGlvbiB0byBFbXBsb3llciIsImxpbmsiOiJodHRwczovL2FnZW50LmJmbGljLmNvbS9MaWJyYXJ5L0FBRUIlMjBFUiUyMFJlbGVhc2UlMjAoNS0yMSkucGRmIn0seyJuYW1lIjoiQ2xhaW1hbnRzIFN0YXRlbWVudCAtIExpZmUgSW5zdXJhbmNlIiwibGluayI6Imh0dHBzOi8vYWdlbnQuYmZsaWMuY29tL0xpYnJhcnkvQUFFQiUyMEZvcm0lMjAyLTEyMTklMjAoNC0yMSkucGRmIn0seyJuYW1lIjoiQ2xhaW1zIC0gQWNjaWRlbnQsIENyaXRpY2FsIElsbG5lc3MsIEhvc3BpdGFsIEluZGVtbml0eSIsImxpbmsiOiJodHRwczovL2FnZW50LmJmbGljLmNvbS9MaWJyYXJ5L0FBRUIlMjBDRi0wMiUyMCg2LTIxKSUyMC0lMjBGaWxsYWJsZS5wZGYifSx7Im5hbWUiOiJDbGFpbXMgLSBTaG9ydC1UZXJtIERpc2FiaWxpdHkgRm9ybSIsImxpbmsiOiJodHRwczovL2FnZW50LmJmbGljLmNvbS9MaWJyYXJ5L0FBRUIlMjBDRi0wMSUyMERJJTIwKDUtMjEpJTIwLnBkZiJ9LHsibmFtZSI6IkNsYWltcyAtIFdlbGxuZXNzIEJlbmVmaXQgRm9ybSIsImxpbmsiOiJodHRwczovL2FnZW50LmJmbGljLmNvbS9MaWJyYXJ5L0FBRUIlMjBXQiUyMENGLTAzJTIwKDQtMjEpLnBkZiJ9LHsibmFtZSI6IkhJUEFBIEZvcm0iLCJsaW5rIjoiaHR0cHM6Ly9hZ2VudC5iZmxpYy5jb20vTGlicmFyeS9BQUVCJTIwMDE0OCUyMEhJUEFBJTIwJTIwKDctMjEpJTIwLSUyMEZpbGxhYmxlJTIwLnBkZiJ9LHsibmFtZSI6Ik1lZGljYWwgSW5mb3JtYXRpb24gUmVxdWVzdCBGb3JtIiwibGluayI6Imh0dHBzOi8vYWdlbnQuYmZsaWMuY29tL0xpYnJhcnkvX0FBRUIlMjBDRi1NUkYlMjAoNS0yMSkucGRmIn1dLCJwb2xpY3kiOlt7Im5hbWUiOiJCZW5lZmljaWFyeSBEZXNpZ25hdGlvbiBGb3JtIiwibGluayI6Imh0dHBzOi8vYWdlbnQuYmZsaWMuY29tL0xpYnJhcnkvQUFFQiUyMDAyMTQlMjBCREYlMjAoNC0yMSkucGRmIn0seyJuYW1lIjoiUG9saWN5IENoYW5nZSBSZXF1ZXN0IEZvcm0iLCJsaW5rIjoiaHR0cHM6Ly9hZ2VudC5iZmxpYy5jb20vTGlicmFyeS9BQUVCJTIwQiUyMDAxMzYlMjBDRiUyMCgzLTIxKSUyMEZpbGxhYmxlLnBkZiJ9XX0sImNvbnRhY3RVcyI6eyJjdXN0b21lcl9jYXJlIjp7InBob25lTnVtYmVyIjoiKDg2Nik0NTgtNzUwMiBvcHRpb24gMiIsImVtYWlsIjoiZ3JvdXBjdXN0b21lcmNhcmVAYXRsYW0uY29tIn0sImNsYWltcyI6eyJwaG9uZU51bWJlciI6Iig4NjYpNDU4LTc0OTkiLCJlbWFpbCI6Imdyb3VwY2xhaW1zQGF0bGFtLmNvbSJ9LCJtYWlsaW5nQWRkcmVzcyI6eyJhZGRyZXNzTGluZTIiOiJBdHRuOiBBQSBFbXBsb3llZSBCZW5lZml0cyIsImFkZHJlc3NMaW5lMSI6IlBPIEJveCAxMDUxODUiLCJjaXR5U3RhdGUiOiJBdGxhbnRhLCBHQSAzMDM0OC01MTg1In0sImNvcnBvcmF0ZUhlYWRxdWFydGVycyI6eyJhZGRyZXNzTGluZTIiOiJCYW5rZXJzIEZpZGVsaXR5IExpZmUgSW5zdXJhbmNlIENvbXBhbnkgJnJlZzsiLCJhZGRyZXNzTGluZTEiOiI0MzcwIFBlYWNodHJlZSBSb2FkIE5FIiwiY2l0eVN0YXRlIjoiQXRsYW50YSwgR0EgMzAzMTkifX0sImZvb3RlckxpbmtzIjp7InRlcm1zT2ZVc2UiOiJodHRwczovL2FhZW1wbG95ZWViZW5lZml0cy5jb20vVGVybXMiLCJwcml2YWN5Tm90aWNlIjoiaHR0cHM6Ly9hYWVtcGxveWVlYmVuZWZpdHMuY29tL1ByaXZhY3kifSwiYXJ0aWNsZUxpbmtzIjpbeyJ0ZXh0IjoiMjAyMCBQb2xpY3lvd25lciBEaXZpZGVuZCBQYXlvdXQgQW5ub3VuY2VkIiwibGluayI6Imh0dHBzOi8vcmVzb3VyY2VzLmVpc2dyb3VwLmNvbS9ub24tbGlmZS1wLWMvZWlzLWR4cC1oaXRzLW1pbGVzdG9uZS13aXRoLTEtMTAwLW9wZW4tYXBpcy1ub3ctYXZhaWxhYmxlLXRvLWluc3VyZXJzLTIifSx7InRleHQiOiJQcm90ZWN0aW5nIHlvdXIgbW9ydGdhZ2UgYW5kIHlvdXIgZmFtaWx5IGhvbWUgd2l0aCBsaWZlIGluc3VyYW5jZSIsImxpbmsiOiJodHRwczovL3Jlc291cmNlcy5laXNncm91cC5jb20vaG9tZS9mdWxsLXNwZWVkLWFoZWFkLXRoZS1zdGF0ZS1vZi1hdXRvbm9tb3VzLXZlaGljbGVzLWFuZC13aGF0LWluc3VyZXJzLW5lZWQtdG8ta25vdy0zIn0seyJ0ZXh0IjoiSG93IHRvIGdldCwgb3Iga2VlcCwgeW91ciByZXRpcmVtZW50IHNhdmluZ3MgcGxhbiBvbiB0cmFjayIsImxpbmsiOiJodHRwczovL3Jlc291cmNlcy5laXNncm91cC5jb20vZWlzL2xpZmUtaW5zdXJhbmNlLXJlaW1hZ2luZWQtcGVyc29uYWxpemVkLXByb2R1Y3RzLWFuZC1wcmljaW5nLWJlbmVmaXQtY3VzdG9tZXJzLWFuZC1pbnN1cmVycyJ9XSwiY29tbXVuaWNhdGlvblByZWZlcmVuY2VzIjpbeyJjb2RlIjoiQkVORUZJVF9JTkZPX1BMQU4iLCJkZWZhdWx0VmFsdWUiOiJCZW5lZml0cyBJbmZvcm1hdGlvbiBhYm91dCB5b3VyIFBsYW4ifSx7ImNvZGUiOiJCSUxMX1NUQVRFIiwiZGVmYXVsdFZhbHVlIjoiQmlsbGluZyBTdGF0ZW1lbnQifSx7ImNvZGUiOiJFWFBMQU5BVElPTl9CRU5FRklUU19TVEFURU1FTlQiLCJkZWZhdWx0VmFsdWUiOiJFeHBsYW5hdGlvbiBvZiBCZW5lZml0cyBTdGF0ZW1lbnQifSx7ImNvZGUiOiJJTkZPUk1BVElPTl9QUk9EVUNUX1NFUlZJQ0VTIiwiZGVmYXVsdFZhbHVlIjoiSW5mb3JtYXRpb24gYWJvdXQgb3RoZXIgUHJvZHVjdHMgb3IgU2VydmljZXMifSx7ImNvZGUiOiJORVdTTEVUVEVSU19QTEFOIiwiZGVmYXVsdFZhbHVlIjoiTmV3c2xldHRlcnMgYWJvdXQgeW91ciBQbGFuIn0seyJjb2RlIjoiUE9MSUNZX0RPQyIsImRlZmF1bHRWYWx1ZSI6IlBvbGljeSBEb2N1bWVudCJ9XSwiZ3JvdXBMaXN0TGltaXRPZmZzZXQiOnsibGltaXQiOjEwMCwib2Zmc2V0IjowfX0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8803296808183447552</serialNumber>
    <type>7340288</type>
    <name><![CDATA[Cacheable HTTPS response]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/config.json/]]></path>
    <location><![CDATA[/config.json/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Unless directed otherwise, browsers may store a local cached copy of content received from web servers. Some browsers, including Internet Explorer, cache content accessed via HTTPS. If sensitive information in application responses is stored in the local cache, then this may be retrieved by other users who have access to the same computer at a future time.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>Applications should return caching directives instructing browsers not to store local copies of any sensitive data. Often, this can be achieved by configuring the web server to prevent caching for relevant paths within the web root. Alternatively, most web development platforms allow you to control the server's caching directives from within individual scripts. Ideally, the web server should return the following HTTP headers in all responses containing sensitive content:</p>
<ul>
<li>Cache-control: no-store</li><li>Pragma: no-cache</li></ul>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/information-disclosure">Web Security Academy: Information disclosure</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
<li><a href="https://cwe.mitre.org/data/definitions/524.html">CWE-524: Information Exposure Through Caching</a></li>
<li><a href="https://cwe.mitre.org/data/definitions/525.html">CWE-525: Information Exposure Through Browser Caching</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/37.html">CAPEC-37: Retrieve Embedded Sensitive Data</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9jb25maWcuanNvbi8gSFRUUC8yDQpIb3N0OiBwZXJzb25hLWVtcGxveWVyLWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpSZWZlcmVyOiBodHRwczovL3BlcnNvbmEtZW1wbG95ZXItYXowM2FhZWJhcHAwMS5rOHMuYXowMy5hYWViLmNsb3VkL2FjY291bnRzZXR0aW5ncw0KU2VjLUNILVVBOiAiLk5vdC9BKUJyYW5kIjt2PSI5OSIsICJHb29nbGUgQ2hyb21lIjt2PSIxMTYiLCAiQ2hyb21pdW0iO3Y9IjExNiINClNlYy1DSC1VQS1QbGF0Zm9ybTogV2luZG93cw0KU2VjLUNILVVBLU1vYmlsZTogPzANCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgNCkV0YWc6IFcvImUxYy05OVBxWHlIMVlrMDJBQU4waVUvU2xLMlRxNGMiDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkRhdGU6IFRodSwgMzEgQXVnIDIwMjMgMDg6MjI6MjQgR01UDQpYLUVudm95LVVwc3RyZWFtLVNlcnZpY2UtVGltZTogMQ0KU2VydmVyOiBpc3Rpby1lbnZveQ0KDQp7ImJhc2VQYXRoIjoiaHR0cHM6Ly9keHAtZ2F0ZXdheS1hejAzYWFlYmFwcDAxLms4cy5hejAzLmFhZWIuY2xvdWQ6NDQzIiwiZGlzYWJsZUNhcHRjaGEiOiJmYWxzZSIsInNpdGVLZXkiOiI2TGVJeEFjVEFBQUFBSmNaVlJxeUhoNzFVTUlFR05RX01YamlaS2hJIiwic2hvd1ZlcnNpb24iOnRydWUsInZlcnNpb24iOiIyMi4xMi4wIiwic2VydmVyVGltZVpvbmUiOiJVVEMiLCJ1c2VyQWdyZWVtZW50TGluayI6eyJ0ZXJtc09mVXNlIjoiaHR0cHM6Ly9hYWVtcGxveWVlYmVuZWZpdHMuY29tL1Rlcm1zIiwicHJpdmFjeVBvbGljeSI6Imh0dHBzOi8vYWFlbXBsb3llZWJlbmVmaXRzLmNvbS9Qcml2YWN5In0sImZvcm1zIjp7ImZpbmFuY2lhbEZvcm1zIjpbeyJuYW1lIjoiQmFuayBEcmFmdCBBdXRob3JpemF0aW9uIExpc3QgQmlsbCIsImxpbmsiOiJodHRwczovL2FnZW50LmJmbGljLmNvbS9MaWJyYXJ5L0FBRUIlMjBQUkYlMjAwNTgyJTIwKDMtMjEpX0ZpbGxhYmxlLnBkZiJ9LHsibmFtZSI6IkZpbmFuY2lhbCBBbm51aXR5IFRyYW5zYWN0aW9ucyBGb3JtIiwibGluayI6Imh0dHBzOi8vYWdlbnQuYmZsaWMuY29tL0xpYnJhcnkvQUFFQiUyMEZpbiUyMEFubiUyMCg1LTIxKS5wZGYifSx7Im5hbWUiOiJGaW5hbmNpYWwgVHJhbnNhY3Rpb25zIEZvcm0iLCJsaW5rIjoiaHR0cHM6Ly9hZ2VudC5iZmxpYy5jb20vTGlicmFyeS9BQUVCJTIwRmluJTIwVHJhbnMlMjAoNS0yMSkucGRmIn1dLCJjbGFpbXMiOlt7Im5hbWUiOiJBdXRob3JpemF0aW9uIHRvIERpc2Nsb3NlIEhlYWx0aCBJbmZvcm1hdGlvbiB0byBFbXBsb3llciIsImxpbmsiOiJodHRwczovL2FnZW50LmJmbGljLmNvbS9MaWJyYXJ5L0FBRUIlMjBFUiUyMFJlbGVhc2UlMjAoNS0yMSkucGRmIn0seyJuYW1lIjoiQ2xhaW1hbnRzIFN0YXRlbWVudCAtIExpZmUgSW5zdXJhbmNlIiwibGluayI6Imh0dHBzOi8vYWdlbnQuYmZsaWMuY29tL0xpYnJhcnkvQUFFQiUyMEZvcm0lMjAyLTEyMTklMjAoNC0yMSkucGRmIn0seyJuYW1lIjoiQ2xhaW1zIC0gQWNjaWRlbnQsIENyaXRpY2FsIElsbG5lc3MsIEhvc3BpdGFsIEluZGVtbml0eSIsImxpbmsiOiJodHRwczovL2FnZW50LmJmbGljLmNvbS9MaWJyYXJ5L0FBRUIlMjBDRi0wMiUyMCg2LTIxKSUyMC0lMjBGaWxsYWJsZS5wZGYifSx7Im5hbWUiOiJDbGFpbXMgLSBTaG9ydC1UZXJtIERpc2FiaWxpdHkgRm9ybSIsImxpbmsiOiJodHRwczovL2FnZW50LmJmbGljLmNvbS9MaWJyYXJ5L0FBRUIlMjBDRi0wMSUyMERJJTIwKDUtMjEpJTIwLnBkZiJ9LHsibmFtZSI6IkNsYWltcyAtIFdlbGxuZXNzIEJlbmVmaXQgRm9ybSIsImxpbmsiOiJodHRwczovL2FnZW50LmJmbGljLmNvbS9MaWJyYXJ5L0FBRUIlMjBXQiUyMENGLTAzJTIwKDQtMjEpLnBkZiJ9LHsibmFtZSI6IkhJUEFBIEZvcm0iLCJsaW5rIjoiaHR0cHM6Ly9hZ2VudC5iZmxpYy5jb20vTGlicmFyeS9BQUVCJTIwMDE0OCUyMEhJUEFBJTIwJTIwKDctMjEpJTIwLSUyMEZpbGxhYmxlJTIwLnBkZiJ9LHsibmFtZSI6Ik1lZGljYWwgSW5mb3JtYXRpb24gUmVxdWVzdCBGb3JtIiwibGluayI6Imh0dHBzOi8vYWdlbnQuYmZsaWMuY29tL0xpYnJhcnkvX0FBRUIlMjBDRi1NUkYlMjAoNS0yMSkucGRmIn1dLCJwb2xpY3kiOlt7Im5hbWUiOiJCZW5lZmljaWFyeSBEZXNpZ25hdGlvbiBGb3JtIiwibGluayI6Imh0dHBzOi8vYWdlbnQuYmZsaWMuY29tL0xpYnJhcnkvQUFFQiUyMDAyMTQlMjBCREYlMjAoNC0yMSkucGRmIn0seyJuYW1lIjoiUG9saWN5IENoYW5nZSBSZXF1ZXN0IEZvcm0iLCJsaW5rIjoiaHR0cHM6Ly9hZ2VudC5iZmxpYy5jb20vTGlicmFyeS9BQUVCJTIwQiUyMDAxMzYlMjBDRiUyMCgzLTIxKSUyMEZpbGxhYmxlLnBkZiJ9XX0sImNvbnRhY3RVcyI6eyJjdXN0b21lcl9jYXJlIjp7InBob25lTnVtYmVyIjoiKDg2Nik0NTgtNzUwMiBvcHRpb24gMiIsImVtYWlsIjoiZ3JvdXBjdXN0b21lcmNhcmVAYXRsYW0uY29tIn0sImNsYWltcyI6eyJwaG9uZU51bWJlciI6Iig4NjYpNDU4LTc0OTkiLCJlbWFpbCI6Imdyb3VwY2xhaW1zQGF0bGFtLmNvbSJ9LCJtYWlsaW5nQWRkcmVzcyI6eyJhZGRyZXNzTGluZTIiOiJBdHRuOiBBQSBFbXBsb3llZSBCZW5lZml0cyIsImFkZHJlc3NMaW5lMSI6IlBPIEJveCAxMDUxODUiLCJjaXR5U3RhdGUiOiJBdGxhbnRhLCBHQSAzMDM0OC01MTg1In0sImNvcnBvcmF0ZUhlYWRxdWFydGVycyI6eyJhZGRyZXNzTGluZTIiOiJCYW5rZXJzIEZpZGVsaXR5IExpZmUgSW5zdXJhbmNlIENvbXBhbnkgJnJlZzsiLCJhZGRyZXNzTGluZTEiOiI0MzcwIFBlYWNodHJlZSBSb2FkIE5FIiwiY2l0eVN0YXRlIjoiQXRsYW50YSwgR0EgMzAzMTkifX0sImZvb3RlckxpbmtzIjp7InRlcm1zT2ZVc2UiOiJodHRwczovL2FhZW1wbG95ZWViZW5lZml0cy5jb20vVGVybXMiLCJwcml2YWN5Tm90aWNlIjoiaHR0cHM6Ly9hYWVtcGxveWVlYmVuZWZpdHMuY29tL1ByaXZhY3kifSwiYXJ0aWNsZUxpbmtzIjpbeyJ0ZXh0IjoiMjAyMCBQb2xpY3lvd25lciBEaXZpZGVuZCBQYXlvdXQgQW5ub3VuY2VkIiwibGluayI6Imh0dHBzOi8vcmVzb3VyY2VzLmVpc2dyb3VwLmNvbS9ub24tbGlmZS1wLWMvZWlzLWR4cC1oaXRzLW1pbGVzdG9uZS13aXRoLTEtMTAwLW9wZW4tYXBpcy1ub3ctYXZhaWxhYmxlLXRvLWluc3VyZXJzLTIifSx7InRleHQiOiJQcm90ZWN0aW5nIHlvdXIgbW9ydGdhZ2UgYW5kIHlvdXIgZmFtaWx5IGhvbWUgd2l0aCBsaWZlIGluc3VyYW5jZSIsImxpbmsiOiJodHRwczovL3Jlc291cmNlcy5laXNncm91cC5jb20vaG9tZS9mdWxsLXNwZWVkLWFoZWFkLXRoZS1zdGF0ZS1vZi1hdXRvbm9tb3VzLXZlaGljbGVzLWFuZC13aGF0LWluc3VyZXJzLW5lZWQtdG8ta25vdy0zIn0seyJ0ZXh0IjoiSG93IHRvIGdldCwgb3Iga2VlcCwgeW91ciByZXRpcmVtZW50IHNhdmluZ3MgcGxhbiBvbiB0cmFjayIsImxpbmsiOiJodHRwczovL3Jlc291cmNlcy5laXNncm91cC5jb20vZWlzL2xpZmUtaW5zdXJhbmNlLXJlaW1hZ2luZWQtcGVyc29uYWxpemVkLXByb2R1Y3RzLWFuZC1wcmljaW5nLWJlbmVmaXQtY3VzdG9tZXJzLWFuZC1pbnN1cmVycyJ9XSwiY29tbXVuaWNhdGlvblByZWZlcmVuY2VzIjpbeyJjb2RlIjoiQkVORUZJVF9JTkZPX1BMQU4iLCJkZWZhdWx0VmFsdWUiOiJCZW5lZml0cyBJbmZvcm1hdGlvbiBhYm91dCB5b3VyIFBsYW4ifSx7ImNvZGUiOiJCSUxMX1NUQVRFIiwiZGVmYXVsdFZhbHVlIjoiQmlsbGluZyBTdGF0ZW1lbnQifSx7ImNvZGUiOiJFWFBMQU5BVElPTl9CRU5FRklUU19TVEFURU1FTlQiLCJkZWZhdWx0VmFsdWUiOiJFeHBsYW5hdGlvbiBvZiBCZW5lZml0cyBTdGF0ZW1lbnQifSx7ImNvZGUiOiJJTkZPUk1BVElPTl9QUk9EVUNUX1NFUlZJQ0VTIiwiZGVmYXVsdFZhbHVlIjoiSW5mb3JtYXRpb24gYWJvdXQgb3RoZXIgUHJvZHVjdHMgb3IgU2VydmljZXMifSx7ImNvZGUiOiJORVdTTEVUVEVSU19QTEFOIiwiZGVmYXVsdFZhbHVlIjoiTmV3c2xldHRlcnMgYWJvdXQgeW91ciBQbGFuIn0seyJjb2RlIjoiUE9MSUNZX0RPQyIsImRlZmF1bHRWYWx1ZSI6IlBvbGljeSBEb2N1bWVudCJ9XSwiZ3JvdXBMaXN0TGltaXRPZmZzZXQiOnsibGltaXQiOjEwMCwib2Zmc2V0IjowfX0=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>3228637580723483648</serialNumber>
    <type>5245344</type>
    <name><![CDATA[Frameable response (potential Clickjacking)]]></name>
    <host ip="10.32.25.9">https://persona-employer-az03aaebapp01.k8s.az03.aaeb.cloud</host>
    <path><![CDATA[/accountsettings]]></path>
    <location><![CDATA[/accountsettings]]></location>
    <severity>Information</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>If a page fails to set an appropriate X-Frame-Options or Content-Security-Policy HTTP header, it might be possible for a page controlled by an attacker to load it within an iframe. This may enable a clickjacking attack, in which the attacker's page overlays the target application's interface with a different interface provided by the attacker. By inducing victim users to perform actions such as mouse clicks and keystrokes, the attacker can cause them to unwittingly carry out actions within the application that is being targeted. This technique allows the attacker to circumvent defenses against cross-site request forgery, and may result in unauthorized actions.</p>
<p>Note that some applications attempt to prevent these attacks from within the HTML page itself, using "framebusting" code. However, this type of defense is normally ineffective and can usually be circumvented by a skilled attacker.</p>
<p>You should determine whether any functions accessible within frameable pages can be used by application users to perform any sensitive actions within the application. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>To effectively prevent framing attacks, the application should return a response header with the name <b>X-Frame-Options</b> and the value <b>DENY</b> to prevent framing altogether, or the value <b>SAMEORIGIN</b> to allow framing only by pages on the same origin as the response itself. Note that the SAMEORIGIN header can be partially bypassed if the application itself can be made to frame untrusted websites.</p>]]></remediationBackground>
    <references><![CDATA[<ul>
    <li><a href="https://portswigger.net/web-security/clickjacking">Web Security Academy: Clickjacking</a></li>
    <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options">X-Frame-Options</a></li>
</ul>]]></references>
    <vulnerabilityClassifications><![CDATA[<ul>
    <li><a href="https://cwe.mitre.org/data/definitions/693.html">CWE-693: Protection Mechanism Failure</a></li>
    <li><a href="https://cwe.mitre.org/data/definitions/1021.html">CWE-1021: Improper Restriction of Rendered UI Layers or Frames</a></li>
    <li><a href="https://capec.mitre.org/data/definitions/103.html">CAPEC-103: Clickjacking</a></li>
</ul>]]></vulnerabilityClassifications>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC9hY2NvdW50c2V0dGluZ3MgSFRUUC8yDQpIb3N0OiBwZXJzb25hLWVtcGxveWVyLWF6MDNhYWViYXBwMDEuazhzLmF6MDMuYWFlYi5jbG91ZA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL2F2aWYsaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuNw0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUztxPTAuOSxlbjtxPTAuOA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzExNi4wLjU4NDUuMTExIFNhZmFyaS81MzcuMzYNCkNvbm5lY3Rpb246IGNsb3NlDQpDYWNoZS1Db250cm9sOiBtYXgtYWdlPTANClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENClNlYy1DSC1VQTogIi5Ob3QvQSlCcmFuZCI7dj0iOTkiLCAiR29vZ2xlIENocm9tZSI7dj0iMTE2IiwgIkNocm9taXVtIjt2PSIxMTYiDQpTZWMtQ0gtVUEtUGxhdGZvcm06IFdpbmRvd3MNClNlYy1DSC1VQS1Nb2JpbGU6ID8wDQoNCg==]]></request>
      <response base64="true"><![CDATA[SFRUUC8yIDIwMCBPSw0KWC1Qb3dlcmVkLUJ5OiBFeHByZXNzDQpDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0wDQpMYXN0LU1vZGlmaWVkOiBXZWQsIDA5IEF1ZyAyMDIzIDA2OjIxOjEyIEdNVA0KRXRhZzogVy8iMmQzLTE4OWQ4ZjRkN2MwIg0KQ29udGVudC1MZW5ndGg6IDcyMw0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpEYXRlOiBUaHUsIDMxIEF1ZyAyMDIzIDA4OjIyOjI1IEdNVA0KWC1FbnZveS1VcHN0cmVhbS1TZXJ2aWNlLVRpbWU6IDENClNlcnZlcjogaXN0aW8tZW52b3kNCg0KPCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iIGNsYXNzPSJsYXlvdXQtcGYgbGF5b3V0LXBmLWZpeGVkIj48aGVhZD48dGl0bGU+RW1wbG95ZXIgUG9ydGFsPC90aXRsZT48bWV0YSBjaGFyc2V0PSJVVEYtOCIvPjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsaW5pdGlhbC1zY2FsZT0xIi8+PGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iIHR5cGU9ImltYWdlL3gtaWNvbiIvPjxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPSI+PC9zY3JpcHQ+PHNjcmlwdD53aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICAgICAgZnVuY3Rpb24gZ3RhZygpe2RhdGFMYXllci5wdXNoKGFyZ3VtZW50cyk7fQogICAgICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOwogICAgICAgICAgICBndGFnKCdjb25maWcnLCAgJycpOzwvc2NyaXB0PjxsaW5rIGhyZWY9Ii8yLnN0eWxlLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij48bGluayBocmVmPSIvc3R5bGUuY3NzIiByZWw9InN0eWxlc2hlZXQiPjwvaGVhZD48Ym9keT48ZGl2IGlkPSJhcHAtY29udGFpbmVyIi8+PHNjcmlwdCBzcmM9Ii8yLmJ1bmRsZS5qcyI+PC9zY3JpcHQ+PHNjcmlwdCBzcmM9Ii9idW5kbGUuanMiPjwvc2NyaXB0PjwvYm9keT48L2h0bWw+]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
</issues>
