import nmap3

from tools.for_group_chat import RESULT
from utils.custom_decorators import pentest_tools


# @pentest_tools
# def nmap_scanner_mock(host: str) -> str:
#     """
#     Purpose: Simulates a Nmap scan operation and returns a mock result.
#     This function is intended for testing or development purposes when an actual scan is not necessary or desirable.
#
#     :return (str): A mock (predefined) result of a scan operation.
#     """
#
#     return RESULT


@pentest_tools
def nmap_scanner_tcp(host: str) -> str:
    """
    Purpose: Performs a basic TCP connection scan.
    :param host: Target IP or hostname.
    :return (str): Scan results.
    """
    nmap_scan_techniques = nmap3.NmapScanTechniques()
    result = nmap_scan_techniques.nmap_tcp_scan(target=host)
    return result


@pentest_tools
def nmap_scanner_idle(host: str) -> str:
    """
    Purpose: Uses a stealthy Idle scan for anonymity.
    :param host: Target IP or hostname.
    :return: Scan results in string format.
    """
    nmap_scan_techniques = nmap3.NmapScanTechniques()
    result = nmap_scan_techniques.nmap_idle_scan(target=host)
    return result


@pentest_tools
def nmap_scanner_fin(host: str) -> str:
    """
    Purpose: Executes a FIN scan to bypass filters.
    :param host: Target IP or hostname.
    :return: Scan results in string format.
    """
    nmap_scan_techniques = nmap3.NmapScanTechniques()
    result = nmap_scan_techniques.nmap_fin_scan(target=host)
    return result


@pentest_tools
def nmap_scanner_ping(host: str) -> str:
    """
    Purpose: Quickly checks if hosts are online.
    :param host: Target IP or hostname.
    :return: Scan results in string format.
    """
    nmap_scan_techniques = nmap3.NmapScanTechniques()
    result = nmap_scan_techniques.nmap_ping_scan(target=host)
    return result


@pentest_tools
def nmap_scanner_syn(host: str) -> str:
    """
    Purpose: Performs a less intrusive SYN scan.
    :param host: Target IP or hostname.
    :return: Scan results in string format.
    """

    nmap_scan_techniques = nmap3.NmapScanTechniques()
    result = nmap_scan_techniques.nmap_syn_scan(target=host)
    return result


@pentest_tools
def nmap_disable_dns(host: str) -> str:
    """
    Purpose: Disables DNS resolution during the scan.
    :param host: Target IP or hostname.
    :return: Scan results in string format.
    """
    nmap_host_discovery = nmap3.NmapHostDiscovery()
    result = nmap_host_discovery.nmap_disable_dns(target=host)
    return result


@pentest_tools
def nmap_arp_discovery(host: str) -> str:
    """
    Purpose: Performs ARP discovery on the local network.
    :param host: Target IP or hostname. Can also be a range of IPs.
    :return: Scan results in string format.
    """
    nmap_host_discovery = nmap3.NmapHostDiscovery()
    result = nmap_host_discovery.nmap_arp_discovery(target=host)
    return result


@pentest_tools
def nmap_no_portscan(host: str) -> str:
    """
    Purpose: Executes host discovery without port scanning.
    :param host: Target IP or hostname.
    :return: Scan results in string format.
    """

    nmap_host_discovery = nmap3.NmapHostDiscovery()
    result = nmap_host_discovery.nmap_no_portscan(target=host)
    return result
