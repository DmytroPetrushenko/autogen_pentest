import importlib.util
import inspect
import os

from autogen import ConversableAgent, UserProxyAgent

TOOLS_PATH = "/tools/for_group_chat/"


def tools_collector(module) -> list:
    # Filter functions by checking for the presence of an attribute '@tools'
    annotated_functions = [
        func for _, func in inspect.getmembers(module, inspect.isfunction)
        if ((hasattr(func, 'pentest_tools') and func.pentest_tools) or
            (hasattr(func, 'other_tools') and func.other_tools))
    ]
    return annotated_functions



def registration_tools_in_agents(owner_agent: ConversableAgent, executor_agent: ConversableAgent, tools_file_name: str):
    if tools_file_name:
        tools_file_path = f"{os.getcwd()}{TOOLS_PATH}{tools_file_name}.py"


        # Create a module specification from the file
        spec = importlib.util.spec_from_file_location(name=tools_file_name, location=tools_file_path)
        module = importlib.util.module_from_spec(spec)

        # Load the module
        spec.loader.exec_module(module)

        function_list: list = tools_collector(module)

    else:
        raise ValueError(f"Tools are not existed with filename: {tools_file_name}!")

    for func in function_list:
        owner_agent.register_for_llm(name=func.__name__, description=func.__doc__)(func)
        executor_agent.register_for_execution(name=func.__name__)(func)


def get_pentest_tools_list(tools_file_name: str):
    if tools_file_name:
        tools_file_path = f"{os.getcwd()}{TOOLS_PATH}{tools_file_name}.py"


        # Create a module specification from the file
        spec = importlib.util.spec_from_file_location(name=tools_file_name, location=tools_file_path)
        module = importlib.util.module_from_spec(spec)

        # Load the module
        spec.loader.exec_module(module)

        function_dict = tools_collector(module)

        tools_list = []
        for name, func in function_dict.items():
            tools_list.append({'name': name, "description": func.__doc__})

        return tools_list
    else:
        raise ValueError(f"Tools are not existed with filename: {tools_file_name}!")
