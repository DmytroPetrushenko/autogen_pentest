import configparser
import os


def find_file_in_project(file_name, start_dir=None):
    if start_dir is None:
        start_dir = os.getcwd()

    for root, dirs, files in os.walk(start_dir):
        if file_name in files:
            return os.path.join(root, file_name)
    return None


def get_llm_urls_list_from_config(config_file_name: str = 'config.ini') -> list:
    config_path = os.path.join(os.getcwd(), config_file_name)
    config = configparser.ConfigParser()
    config.read(config_path)

    llm_urls = [config['LM STUDIO LLM URLS'][key] for key in config['LM STUDIO LLM URLS']]
    return llm_urls


def get_var_from_config(section_name: str, var_name: str, config_file_name: str = 'config.ini') -> str:
    config_path = os.path.join(os.getcwd(), config_file_name)
    config = configparser.ConfigParser()
    config.read(config_path)
    return config[section_name][var_name]

def read_file_to_list(file_name: str, start_dir: str = None) -> list:
    if start_dir is None:
        start_dir = os.getcwd()
    file_name = os.path.join(start_dir, file_name)
    try:
        with open(file_name, 'r') as file_reader:
            return [line.strip() for line in file_reader.readlines()]
    except FileNotFoundError:
        print(f'File {file_name} not found')

